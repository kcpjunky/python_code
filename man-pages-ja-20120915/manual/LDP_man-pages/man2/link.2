.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 1992 Drew Eckhardt;
.\"                               1993 Michael Haardt, Ian Jackson.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified 1993-07-23 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1994-08-21 by Michael Haardt
.\" Modified 2004-06-23 by Michael Kerrisk <mtk.manpages@gmail.com>
.\" Modified 2005-04-04, as per suggestion by Michael Hardt for rename.2
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH LINK 2 2008\-08\-21 Linux "Linux Programmer's Manual"
.SH 名前
link \- ファイルの新しい名前を作成する
.SH 書式
\fB#include <unistd.h>\fP
.sp
\fBint link(const char *\fP\fIoldpath\fP\fB, const char *\fP\fInewpath\fP\fB);\fP
.SH 説明
\fBlink\fP()  は存在するファイルへの新しいリンク (link)  (ハードリンク (hard link) ともいう) を作成する。

\fInewpath\fP が存在する場合には上書きは\fIされない\fP。

この新しい名前は全ての操作において古い名前と完全に同じように使用される; 両方の名前は同じファイルを参照しており (それで同じ許可
(permission) や所有者 (ownership) となるので)、 どちらの名前が本来のものであるか判別できない。
.SH 返り値
成功した場合は 0 が返される。エラーの場合は \-1 が返され、 \fIerrno\fP が適切に設定される。
.SH エラー
.TP 
\fBEACCES\fP
\fInewpath\fP を含んでいるディレクトリへの書き込みが許されていないか、 \fIoldpath\fP または \fInewpath\fP
へのディレクトリのどれかに検索許可がない (\fBpath_resolution\fP(7)  を参照)。
.TP 
\fBEEXIST\fP
\fInewpath\fP が既に存在する。
.TP 
\fBEFAULT\fP
\fIoldpath\fP や \fInewpath\fP がアクセス可能なアドレス空間の外を指している。
.TP 
\fBEIO\fP
I/O エラーが発生した。
.TP 
\fBELOOP\fP
\fIoldpath\fP または \fInewpath\fP を解決する際に遭遇したシンボリックリンクが多過ぎる。
.TP 
\fBEMLINK\fP
\fIoldpath\fP によって参照されるファイルは 既に最大数までのリンクを持っている。
.TP 
\fBENAMETOOLONG\fP
\fIoldpath\fP または \fInewpath\fP が長過ぎる。
.TP 
\fBENOENT\fP
\fIoldpath\fP または \fInewpath\fP のディレクトリ部分が存在しないか、 壊れた(dangling)シンボリックリンクである。
.TP 
\fBENOMEM\fP
十分なカーネルメモリーがない。
.TP 
\fBENOSPC\fP
そのファイルを含んでいるデバイスに新しいディレクトリエントリを 作成するための空きがない。
.TP 
\fBENOTDIR\fP
\fIoldpath\fP または \fInewpath\fP のディレクトリ部分が、実際には、ディレクトリでない。
.TP 
\fBEPERM\fP
\fIoldpath\fP がディレクトリである。
.TP 
\fBEPERM\fP
\fIoldpath\fP と \fInewpath\fP を含んでいるファイルシステムがハードリンクをサポートしていない。
.TP 
\fBEROFS\fP
ファイルが読み込み専用のファイルシステムに存在する。
.TP 
\fBEXDEV\fP
\fIoldpath\fP と \fInewpath\fP が同じマウントされたファイルシステムに存在しない。 (Linux は 1
つのファイルシステムを複数のマウント位置に マウントすることを許可している。 しかし \fBlink\fP()  は、たとえ同じファイルシステムであっても、
別々のマウント位置を跨いでは動作しない。)
.SH 準拠
.\" SVr4 documents additional ENOLINK and
.\" EMULTIHOP error conditions; POSIX.1 does not document ELOOP.
.\" X/OPEN does not document EFAULT, ENOMEM or EIO.
SVr4, 4.3BSD, POSIX.1\-2001 (但し「注意」を参照)。
.SH 注意
\fBlink\fP()  でファイルシステムを超えてハードリンクを作成することはできない。 このような場合は \fBsymlink\fP(2)  を使用すること。

.\" more precisely: since kernel 1.3.56
.\" For example, the default Solaris compilation environment
.\" behaves like Linux, and contributors to a March 2005
.\" thread in the Austin mailing list reported that some
.\" other (System V) implementations did/do the same -- MTK, Apr 05
POSIX.1\-2001 では、 \fIoldpath\fP がシンボリックリンクである場合、 \fBlink\fP()  は \fIoldpath\fP
の参照を解決すべきであると記述されている。 しかし、カーネル 2.0 以降の Linux ではそのようになっていない。 \fIoldpath\fP
がシンボリックリンクである場合、 \fInewpath\fP は同じシンボリックリンクファイルへの (ハード) リンクとして作成される (つまり
\fInewpath\fP は \fIoldpath\fP が参照していた同じファイルへのシンボリックリンクになる)。 他のいくつかの実装でも Linux
と同じように動作する。 POSIX.1\-2008 では \fBlink\fP()  の仕様が変更され、 \fIoldpath\fP
がシンボリックリンクの場合にシンボリックリンクの参照を 解決するかどうかは実装依存となった。
リンク作成時のシンボリックリンクの扱いについての詳細な制御に 関しては \fBlinkat\fP(2)  を参照のこと。
.SH バグ
NFS ファイルシステムでは、NFS サーバーがリンクを作成した後に、 それを伝える前に死んだ場合には返り値が不正な場合がある。
リンクが作成できたかどうか見つけるためには \fBstat\fP(2)  を使用すること。
.SH 関連項目
\fBln\fP(1), \fBlinkat\fP(2), \fBopen\fP(2), \fBrename\fP(2), \fBstat\fP(2), \fBsymlink\fP(2),
\fBunlink\fP(2), \fBpath_resolution\fP(7), \fBsymlink\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
