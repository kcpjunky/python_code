.\" Copyright 2002 Walter Harms (walter.harms@informatik.uni-oldenburg.de)
.\" and Copyright (C) 2011 Michael Kerrisk <mtk.manpages@gamil.com>
.\" Distributed under GPL
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH CACOS 3 2011\-09\-15 "" "Linux Programmer's Manual"
.SH 名前
cacos, cacosf, cacosl \- 複素数の逆余弦 (arc cosine)
.SH 書式
\fB#include <complex.h>\fP
.sp
\fBdouble complex cacos(double complex \fP\fIz\fP\fB);\fP
.br
\fBfloat complex cacosf(float complex \fP\fIz\fP\fB);\fP
.br
\fBlong double complex cacosl(long double complex \fP\fIz\fP\fB);\fP
.sp
\fI\-lm\fP でリンクする。
.SH 説明
\fBcacos\fP()  関数は複素数 \fIz\fP の逆余弦 (arc cosine) を計算する。 \fIy\ =\ cacos(z)\fP ならば、 \fIz\ =\ ccos(y)\fP が成立する。 \fIy\fP の実部の値は区間 [0,pi] から選択される。
.LP
次の関係が成立する:
.nf

    cacos(z) = \-i * clog(z + i * csqrt(1 \- z * z))
.fi
.SH バージョン
これらの関数は glibc バージョン 2.1 で初めて登場した。
.SH 準拠
C99.
.SH 例
.nf
/* "\-lm" でリンクする */

#include <complex.h>
#include <stdlib.h>
#include <unistd.h>
#include <stdio.h>

int
main(int argc, char *argv[])
{
    double complex z, c, f;
    double complex i = I;

    if (argc != 3) {
        fprintf(stderr, "Usage: %s <real> <imag>\en", argv[0]);
        exit(EXIT_FAILURE);
    }

    z = atof(argv[1]) + atof(argv[2]) * I;

    c = cacos(z);

    printf("cacos() = %6.3f %6.3f*i\en", creal(c), cimag(c));

    f = \-i * clog(z + i * csqrt(1 \- z * z));

    printf("formula = %6.3f %6.3f*i\en", creal(f), cimag(f));

    exit(EXIT_SUCCESS);
}
.fi
.SH 関連項目
\fBccos\fP(3), \fBclog\fP(3), \fBcomplex\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
