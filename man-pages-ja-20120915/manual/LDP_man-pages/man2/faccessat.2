.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" This manpage is Copyright (C) 2006, Michael Kerrisk
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH FACCESSAT 2 2012\-05\-04 Linux "Linux Programmer's Manual"
.SH 名前
faccessat \- ディレクトリファイルディスクリプタから相対的な位置にある ファイルのアクセス権をチェックする
.SH 書式
.nf
\fB#include <fcntl.h> /* AT_* 定数の定義 */\fP
\fB#include <unistd.h>\fP
.sp
\fBint faccessat(int \fP\fIdirfd\fP\fB, const char *\fP\fIpathname\fP\fB, int \fP\fImode\fP\fB, int \fP\fIflags\fP\fB);\fP
.fi
.sp
.in -4n
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.in
.sp
\fBfaccessat\fP():
.PD 0
.ad l
.RS 4
.TP  4
glibc 2.10 以降:
_XOPEN_SOURCE\ >=\ 700 || _POSIX_C_SOURCE\ >=\ 200809L
.TP 
glibc 2.10 より前:
_ATFILE_SOURCE
.RE
.ad
.PD
.SH 説明
\fBfaccessat\fP()  システムコールは、この man ページで説明している違いがある以外は、 \fBaccess\fP(2)
と全く同じように動作する。

\fIpathname\fP で指定されるパス名が相対パスである場合、 ファイルディスクリプタ \fIdirfd\fP
で参照されるディレクトリからの相対パス名として解釈される (\fBaccess\fP(2)
では、相対パスは呼び出し元プロセスのカレントワーキングディレクトリからの 相対パスとなる)。

\fIpathname\fP が相対パスであり、かつ \fIdirfd\fP が特別な値 \fBAT_FDCWD\fP である場合、 \fIpathname\fP は
(\fBaccess\fP(2)  と同じように) 呼び出し元プロセスの カレントワーキングディレクトリからの相対パス名として解釈される。

\fIpathname\fP が絶対パスである場合、 \fIdirfd\fP は無視される。

\fIflags\fP は以下の値を 0 個以上 OR して作られる。
.TP 
\fBAT_EACCESS\fP
実効 (effective) ユーザ ID と実効グループ ID を使って、 アクセス権のチェックを行う。 デフォルトでは、
\fBfaccessat\fP()  は (\fBaccess\fP(2)  と同様に) 実 ID を使う。
.TP 
\fBAT_SYMLINK_NOFOLLOW\fP
\fIpathname\fP がシンボリックリンクの場合は、それを辿るのではなく、 リンク自身についての情報を返す。
.SH 返り値
成功した場合 (全ての要求された許可が得られたら)、 \fBfaccessat\fP()  は 0 を返す。 エラーの場合、\-1 が返され、 \fIerrno\fP
にはエラーを示す値が設定される。
.SH エラー
\fBaccess\fP(2)  と同じエラーが \fBfaccessat\fP()  でも起こる。 \fBfaccessat\fP()
では、その他に以下のエラーが起こる:
.TP 
\fBEBADF\fP
\fIdirfd\fP が有効なファイルディスクリプタでない。
.TP 
\fBEINVAL\fP
\fIflags\fP に不正なフラグ値が指定された。
.TP 
\fBENOTDIR\fP
\fIpathname\fP が相対パスで、かつ \fIdirfd\fP がディレクトリ以外のファイルを参照するファイルディスクリプタである。
.SH バージョン
\fBfaccessat\fP()  は Linux カーネル 2.6.16 で追加された。
ライブラリによるサポートは glibc バージョン 2.4 で追加された。
.SH 準拠
POSIX.1\-2008.
.SH 注意
\fBfaccessat\fP()  が必要な理由については、 \fBopenat\fP(2)  を参照すること。

\fI警告\fP: \fBfaccessat\fP() は \fBaccess\fP(2) や \fBeuidaccess\fP(3) と同様の
競合状態が起こり得る。
.SS "glibc についての注意"
\fBAT_EACCESS\fP と \fBAT_SYMLINK_NOFOLLOW\fP フラグは、 \fBfaccessat\fP()  の glibc
ラッパー関数で実際に実装されている。 これらのフラグのいずれかが指定された場合、 ラッパー関数はアクセス権を決定するために \fBfstatat\fP(2)
を使う。
.SH 関連項目
\fBaccess\fP(2), \fBopenat\fP(2), \fBeauidaccess\fP(3), \fBcredentials\fP(7),
\fBpath_resolution\fP(7), \fBsymlink\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
