.\"
.\" sed.1 - the *roff document processor source for the sed manual
.\"
.\" This file is part of GNU sed.
.\" Copyright (C) 1998 Free Software Foundation, Inc.
.\"
.\" This program is free software; you can redistribute it and/or modify
.\" it under the terms of the GNU General Public License as published by
.\" the Free Software Foundation; either version 2, or (at your option)
.\" any later version.
.\"
.\" This program is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public License
.\" along with this program; if not, write to the Free Software
.\" Foundation, 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. */
.\"
.\" Japanese Version Copyright (c) 2001 NAKANO Takeo all rights reserved.
.\" Translated Mon 7 May 2001 by NAKANO Takeo <nakano@apm.seikei.ac.jp>
.\"
.TH SED 1 "1998-05-07" "GNU Project"
.ds sd \fIsed\fP
.SH 名前
sed \- ストリームエディタ
.SH 書式
.nf
sed [-n] [-V] [--quiet] [--silent] [--version] [--help]
    [-e script] [--expression=script]
    [-f script-file] [--file=script-file]
    [script-if-no-other-script]
    [file...]
.fi
.SH 説明
\*(sd はストリームエディタである。
ストリームエディタは、入力ストリーム
(ファイルまたはパイプラインからの入力)
に対して基本的なテキスト変換を行うために用いられる。
\*(sd は
編集スクリプトを使える (\fIed\fP のような) エディタと
いろいろな面で似ているが、
\*(sd は入力に対して 1 パスだけで動作するので、より効率的である。
また \*(sd はパイプラインのテキストに対してフィルタ動作を行うことができ、
この点は他のタイプのエディタとはっきり違う。

.SH オプション
\*(sd の起動時には以下のコマンドラインオプションを指定できる。
.TP
.B -V
.TP
.B --version
sed のバージョン・著作権表示を出力し、終了する。
.TP
.B -h
.TP
.B --help
コマンドラインオプションを簡単にまとめた利用法と
バグレポート先のアドレスを出力し、終了する。
.TP
.B -n
.TP
.B --quiet
.TP
.B --silent
デフォルトでは、
\*(sd はスクリプトの各サイクルの最後でパターンスペースの内容を出力する。
これらのオプションを指定するとこの自動的な出力が行われなくなり、
.B p
コマンドで出力することを指定された場合に限って
\*(sd は出力を生成する。
.TP
.B -e \fIscript\fP
.TP
.BI --expression= script
.I script
のコマンドを、入力の処理中に行われるコマンドセットに追加する。
.TP
.B -f \fIscript-file\fP
.TP
.BI --file= script-file
ファイル
.I script-file
に含まれるコマンドを、入力の処理中に行われるコマンドセットに追加する。
.PP
.BR -e ", " -f ", " --expression ", " --file
などのオプションがコマンドラインから全く与えられなかった場合は、
コマンドラインの引き数のうち、オプションでない最初のものが
.I script
として受け取られ、実行される。
.PP
以上のコマンドラインパラメータを処理したあとに引き数が残った場合は、
それらは処理対象となる入力ファイルのファイル名と解釈される。
.B -
というファイル名は、標準入力ストリームを参照する。
ファイル名が全く指定されなかった場合は標準入力を処理する。

.SH コマンドの文法
これは \*(sd コマンドのごく簡単な文法で、
既に sed を知っている人に対する備忘録程度のものである。
完全な記述を求める場合は他の文書 (texinfo 文書など) にあたること。
.SS アドレスを取らないコマンド
.TP
.RI :\  label
.B b
コマンドと
.B t
コマンド用のラベル。
.TP
.RI # comment
次の改行文字まで (あるいは
.B -e
スクリプトフラグメントの末尾まで) をコメントとして取り扱う。
.TP
}
{ } ブロックの閉じ括弧。
.SS アドレスを 0 または 1 個とるコマンド
.TP
=
現在の行番号を表示する。
.TP
a \e
.TP
.I text
.I text
を追加する。
.I text
に改行を含めたい場合は、その前にバックスラッシュを置く。
.TP
i \e
.TP
.I text
.I text
を挿入する。
.I text
に改行を含めたい場合は、その前にバックスラッシュを置く。
.TP
q
これ以上入力の処理を行わず、ただちに \*(sd スクリプトの処理を終了する。
ただし auto-print が diable されていなければ、
カレントのパターンスペースが出力される。
.TP
.RI r\  filename
テキストを
.I filename
から読んで追加する。
.SS アドレス範囲をとりうるコマンド
.TP
{
コマンドブロックの開始 (} で終了する)。
.TP
.RI b\  label
.I label
に分岐する。
.I label
が省略された場合は、スクリプトの末尾に分岐する。
.TP
.RI t\  label
最後に入力行が読まれ、最後に t コマンドが行われて以降に
s/// が成功していれば、
.I label
に分岐する。
.I label
が省略された場合は、スクリプトの末尾に分岐する。
.TP
c \e
.TP
.I text
選択した行を
.I text
で置換する。
.I text
に改行を含めたい場合は、その前にバックスラッシュを置く。
.TP
d
パターンスペースを削除する。
次のサイクルを開始する。
.TP
D
パターンスペースの最初の改行までを削除する。
次のサイクルを開始するが、
パターンスペースにまだデータが残っていたら、
入力からの読み込みをスキップする。
.TP
h H
パターンスペースをホールドスペースにコピー/追加する。
.TP
g G
ホールドスペースをパターンスペースにコピー/追加する。
.TP
x
ホールドスペースとパターンスペースの内容を交換する。
.TP
l
現在の行を「視覚的に紛れのない」形式でリストする。
.TP
n N
入力の次の行をパターンスペースに読み込む/追加する。
.TP
p
現在のパターンスペースを出力する。
.TP
P
現在のパターンスペースの最初の改行までを出力する。
.TP
.RI s/ regexp / replacement /
パターンスペースに対して
.I regexp
のマッチを試みる。
マッチに成功すると、マッチした部分を
.I replacement
に置換する。
.I replacement
は特殊文字である
.B &
を含むことができ、これはパターンスペースのマッチした部分を参照する。
また \e1 から \e9 までの特殊エスケープを含むこともでき、
これは
.I regexp
の副表現 (sub-expression) にマッチした部分をそれぞれ参照する。
.TP
.RI w\  filename
現在のパターンスペースを
.I filename
に書く。
.TP
.RI y/ source / dest /
パターンスペースにある文字のうち、
.I source
にあるものを、
.I dest
の同じ位置にある文字に交換する。
.SH アドレス
\*(sd のコマンドはアドレスを指定せずに与えることもでき、
この場合そのコマンドはすべての入力行に対して実行される。
アドレスをひとつ与えると、
コマンドはそのアドレスにマッチした入力行に対してのみ実行される。
2 つのアドレスを与えると、最初のアドレスにマッチした行から、
2 番目のアドレスにマッチした行に至る範囲 (両マッチ行を含む)
にあるすべての行に対して実行される。
アドレスの範囲指定については 3 つのことを注意しておく。
まず指定方法は
.IR addr1 , addr2
である (つまりアドレスをコンマで区切る)。
.I addr1
にマッチした行は、たとえ
.I addr2
がより前の行にマッチした場合でも、常に処理対象となる。
.I addr2
が
.I regexp
(正規表現) の場合には、
.I addr1
にマッチした行に対しては
.I addr2
のマッチは行われない。
.PP
アドレス (あるいはアドレス範囲) とコマンドの間には
.B !
を挟むことができる。この場合は、アドレス (あるいはアドレス範囲) が
\fBマッチしなかった\fP行に対してのみコマンドが実行される。
.PP
以下のアドレスタイプがサポートされている。
.TP
.I number
.I number
で指定した行だけにマッチする。
.TP
.IR first ~ step
.I first
行からはじまる
.I step
行おきの行にマッチする。例えば ``sed -n 1~2p'' は
入力行のうち奇数行を表示し、アドレスを 2~5 にすると、
第 2 行から 5 行おきに表示する (これは GNU の拡張である)。
.TP
$
最終行にマッチする。
.TP
.RI / regexp /
正規表現
.I regexp
にマッチした行にマッチする。
.TP
.BI \fR\e\fPc regexp c
正規表現
.I regexp
にマッチした行にマッチする。
文字
.B c
は何でもよい。
.SH 正規表現
POSIX.2 BRE
をサポートすべきであるが、まだ完全にはサポートできていない。
正規表現内部の
.B \en
シーケンスは改行文字にマッチする。
GNU 拡張も存在する。
[要修正: より詳細を記述する必要がある。
少なくとも、何がサポートされているかを述べた、
他の文書へのリファレンスが必要である]
.SH その他の注意
このバージョンの sed は、
あらゆる正規表現の内部・置換コマンドの
.I replacement
の内部・文字交換 (y) コマンドの
.I source
および
.I dest
の内部のいずれにおいても、
.RB \e <newline>
というシーケンスが使える。
.SH 関連項目
.BR awk (1),
.BR ed (1),
.BR expr (1),
.BR emacs (1),
.BR perl (1),
.BR tr (1),
.BR vi (1),
.BR regex (5)
[うーん、書かないとダメですねえ]
【訳注: LDP には
.BR regex (7)
があります】,
sed.info,
\*(sd に関する様々な本のいずれか,
.na
the \*(sd FAQ (http://www.wollery.demon.co.uk/sedtut10.txt,
http://www.ptug.org/sed/sedfaq.htm).
.SH バグ
.PP
バグレポートは
.B bug-gnu-utils@gnu.org
まで送って下さい。
「Subject:」フィールドのどこかに
「sed」という単語を入れるようにして欲しい。
