.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (c) 1992 Drew Eckhardt (drew@cs.colorado.edu), March 28, 1992
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Modified by Michael Haardt <michael@moria.de>
.\" Modified 1993-07-21 by Rik Faith <faith@cs.unc.edu>
.\" Modified 1997-01-12 by Michael Haardt
.\"   <michael@cantor.informatik.rwth-aachen.de>: NFS details
.\" Modified 2004-06-23 by Michael Kerrisk <mtk.manpages@gmail.com>
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH CHMOD 2 2010\-09\-26 Linux "Linux Programmer's Manual"
.SH 名前
chmod, fchmod \- ファイルのモードを変更する
.SH 書式
\fB#include <sys/stat.h>\fP
.sp
\fBint chmod(const char *\fP\fIpath\fP\fB, mode_t \fP\fImode\fP\fB);\fP
.br
\fBint fchmod(int \fP\fIfd\fP\fB, mode_t \fP\fImode\fP\fB);\fP
.sp
.in -4n
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.in
.sp
.ad l
.PD 0
\fBfchmod\fP():
.RS 4
_BSD_SOURCE || _XOPEN_SOURCE\ >=\ 500 || _XOPEN_SOURCE\ &&\ _XOPEN_SOURCE_EXTENDED
.br
|| /* glibc 2.12 以降: */ _POSIX_C_SOURCE\ >=\ 200809L
.RE
.PD
.ad
.SH 説明
これらのシステムコールはファイルのアクセス許可 (permission) を変更する。 システムコール間の違いは、ファイルの指定の仕方だけである。
.IP * 2
\fBchmod\fP()  は、 \fIpath\fP で指定されたパス名を持つファイルの許可を変更する。 \fIpath\fP
がシンボリック・リンクの場合は、リンクの展開が行われる。
.IP *
\fBfchmod\fP()  は、オープンされたファイルディスクリプタ \fIfd\fP により参照されるファイルの許可を変更する。
.PP
新しいファイル許可は \fImode\fP で指定される。 \fImode\fP は、以下に示す値の 0 個以上の OR (論理和) をとって作成される
ビットマスクである。
.TP  18
\fBS_ISUID\fP  (04000)
set\-user\-ID (\fBexecve\fP(2)  時にプロセスの実効ユーザ ID にセットされる)
.TP 
\fBS_ISGID\fP  (02000)
set\-group\-ID (以下の場合に (\fBexecve\fP(2)  実行時にプロセスの実効グループ ID にセットされる、 強制ロック
(mandatory locking) を行う (\fBfcntl\fP(2)  の説明を参照)、
新しいファイルのグループとして親ディレクトリと同じものを使う (\fBchown\fP(2)  と \fB(\fPmkdir\fB(2)\fP の説明を参照)
.TP 
\fBS_ISVTX\fP  (01000)
スティッキー・ビット (sticky bit) (削除制限フラグ、 \fBunlink\fP(2)  の説明を参照)
.TP 
\fBS_IRUSR\fP  (00400)
所有者による読み取り
.TP 
\fBS_IWUSR\fP  (00200)
所有者による書き込み
.TP 
\fBS_IXUSR\fP  (00100)
所有者による実行 (execute) / 検索 (search)  (「検索」はディレクトリに対して適用されるもので、
そのディレクトリ内のエントリーへアクセスできるかを意味する)
.TP 
\fBS_IRGRP\fP  (00040)
グループによる読み取り
.TP 
\fBS_IWGRP\fP  (00020)
グループによる書き込み
.TP 
\fBS_IXGRP\fP  (00010)
グループによる実行 / 検索
.TP 
\fBS_IROTH\fP  (00004)
他人 (others) による読み取り
.TP 
\fBS_IWOTH\fP  (00002)
他人による書き込み
.TP 
\fBS_IXOTH\fP  (00001)
他人による実行 / 検索
.PP
呼び出したプロセスの実効 (effective) UID がファイルの所有者と一致するか、 そのプロセスが特権を持たなければならない (Linux では
\fBCAP_FOWNER\fP ケーパビリティ (capability) を持たなければならない)。

呼び出したプロセスに特権がなく (Linux では \fBCAP_FSETID\fP ケーパビリティがなく)、かつファイルのグループ ID が
プロセスの実効グループ ID または補助的なグループ ID にマッチしない場合、 \fBS_ISGID\fP
ビットはオフにされるが、これによってエラーが返されることはない。

安全のための処置として、 ファイル・システムによっては、ファイルの書き込みを行う時に セット・ユーザー ID とセット・グループ ID
ビットと実行ビットが オフにされることがある。 (Linux では、書き込みプロセスが \fBCAP_FSETID\fP
ケーパビリティを持っていない場合に、これが起こる。)  ファイル・システムの中には、スーパー・ユーザーだけが
特別の意味を持つスティッキー・ビットを設定できるものがある。 スティッキー・ビットとディレクトリに対する セット・ユーザー (グループ)・ID
ビットについては、 \fBstat\fP(2)  を見よ。

NFS ファイルシステム上では、パーミッションを制限すると、 既にオープンされているファイルに対してすぐに影響が及ぶ。
これはアクセス制御がサーバー上で行われているが、 オープンされているファイルはクライアント側で管理されているためである。
クライアント側でファイル属性のキャッシュが有効になっている場合に、 パーミッションの制限を緩くすると、
他のクライアントに情報が伝わるのが遅れるかもしれない。
.SH 返り値
成功した場合は 0 が返される。エラーの場合は \-1 が返され、 \fIerrno\fP が適切に設定される。
.SH エラー
ファイル・システムによっては他のエラーを返す場合がある。 \fBchmod\fP()  で一般的なエラーを以下に挙げる。
.TP 
\fBEACCES\fP
パス名の構成要素に検索許可がない (\fBpath_resolution\fP(7)  も見よ)。
.TP 
\fBEFAULT\fP
\fIpath\fP がアクセスできるアドレス空間外を指している。
.TP 
\fBEIO\fP
I/O エラーが発生した。
.TP 
\fBELOOP\fP
\fIpath\fP を解決する際に遭遇したシンボリック・リンクが多過ぎる。
.TP 
\fBENAMETOOLONG\fP
\fIpath\fP が長過ぎる。
.TP 
\fBENOENT\fP
ファイルが存在しない。
.TP 
\fBENOMEM\fP
カーネルに十分なメモリがない。
.TP 
\fBENOTDIR\fP
パス名の構成要素がディレクトリではない。
.TP 
\fBEPERM\fP
実効 UID がファイルの所有者と一致せず、プロセスに特権がない (Linux では \fBCAP_FOWNER\fP ケーパビリティを持たない)。
.TP 
\fBEROFS\fP
ファイルが読み込み専用 (read only) のファイル・システム上にある。
.PP
\fBfchmod\fP()  で一般的なエラーを挙げる:
.TP 
\fBEBADF\fP
ファイル・ディスクリプター \fIfd\fP が有効でない。
.TP 
\fBEIO\fP
上記を参照。
.TP 
\fBEPERM\fP
上記を参照。
.TP 
\fBEROFS\fP
上記を参照。
.SH 準拠
4.4BSD, SVr4, POSIX.1\-2001.
.SH 関連項目
\fBchown\fP(2), \fBexecve\fP(2), \fBfchmodat\fP(2), \fBopen\fP(2), \fBstat\fP(2),
\fBpath_resolution\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
