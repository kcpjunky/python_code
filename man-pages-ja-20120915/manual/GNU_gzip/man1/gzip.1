.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.\"
.\" Japanese Version Copyright (c) 1993-2012
.\" NetBSD jman proj., Yuichi SATO and Akihiro MOTOKI
.\"         all rights reserved. 
.\" Translated 1993-10-15, NetBSD jman proj. <jman@spa.is.uec.ac.jp>
.\" Updated 2000-06-09,Yuichi SATO <sato@complex.eng.hokudai.ac.jp>
.\" Updated 2012-04-20, Akihiro MOTOKI <amotoki@gmail.com>, gzip 1.4
.\"
.TH GZIP 1 local  
.SH 名前
gzip, gunzip, zcat \- ファイルの圧縮・伸長を行う
.SH 書式
.ll +8
\fBgzip\fP [\fB \-acdfhlLnNrtvV19 \fP] [\fB\-S\ suffix\fP] [ \fIname \&...\fP ]
.ll -8
.br
\fBgunzip\fP [\fB \-acfhlLnNrtvV \fP] [\fB\-S\ suffix\fP] [ \fIname \&...\fP ]
.br
\fBzcat\fP [\fB \-fhLV \fP] [ \fIname \&...\fP ]
.SH 説明
\fIgzip\fP は Lempel\-Ziv コーディング (LZ77) を利用して、 指定されたファイルのサイズを小さくする。
各ファイルは所有権・アクセス時刻・修正時刻を保存したまま、 拡張子 \fB\&.gz\fP をつけたファイルに置き換えられる。
(デフォルトの拡張子は、VMSでは \fB\-gz\fP, MSDOS, OS/2 FAT, Windows NT FAT, Atari では \fBz\fP
である。)  ファイルが指定されない場合、またはファイル名が "\-" の場合、 標準入力を圧縮して標準出力に書き出す。 \fIgzip\fP
は通常のファイルしか圧縮しようとしない。 特に、シンボリックリンクは無視される。
.PP
圧縮されたファイル名が、そのファイルシステム上では長すぎる場合、 \fIgzip\fP はファイル名を切り詰める。 \fIgzip\fP はファイル名のうちの 4
文字以上のパートを切り詰めようとする。 (各パートはドットで区切られている。)  小さなパートだけからファイル名ができている場合、
もっとも長いパートが切り詰められる。 例えば、ファイル名が 14 文字までに制限されている場合、 gzip.msdos.exe は
gzi.msd.exe.gz という名前で圧縮される。 ファイル名の長さに制限がないシステムでは、 ファイル名が切り詰められることはない。
.PP
デフォルトでは、 \fIgzip\fP は圧縮ファイルの中に元ファイルの名前とタイムスタンプを保存する。 これらの情報はファイルを \fB\-N\fP
オプションで伸長するときに使われる。 これは、圧縮されたファイルの名前が切り詰められた場合や、
ファイル転送の後でタイムスタンプが保存されなかった場合に役立つ。
.PP
圧縮されたファイルは \fIgzip \-d\fP, \fIgunzip\fP, \fIzcat\fP を使うと元の形に復元することができる。
圧縮ファイルに保存された元ファイルの名前がファイルシステムに適合しない場合、 そのファイルシステムに適合するように元の名前から新しい名前が作られる。
.PP
\fIgunzip\fP は、ファイル名が .gz, \-gz, .z, \-z, _z (大文字小文字は区別しない) で終わっており、
正しいマジックナンバーで始まっているファイルのリストを コマンドラインから受け取り、
伸長したファイルに置き換える。このとき圧縮ファイルの拡張子は取り除かれる。
\fIgunzip\fP は \fB\&.tgz\fP と \fB\&.taz\fP という特別な拡張子も認識する。
これらはそれぞれ、 \fB\&.tar.gz\fP と \fB\&.tar.Z\fP の省略形である。
圧縮するときに \fB\&.tar\fP という拡張子をもつファイルの名前を切り詰める必要があるなら、
\fIgzip\fP はかわりに \fB\&.tgz\fP という拡張子を使う。
.PP
\fIgunzip\fP は \fIgzip, zip, compress, compress \-H, pack\fP で作られたファイルを正しく伸長できる。
入力形式の検知は自動的に行われる。 はじめの 2 つの形式を使った場合、 \fIgunzip\fP は 32 ビットの CRC をチェックする。
\fIpack\fP に対して、gunzip は伸長した長さをチェックする。 標準的な \fIcompress\fP
形式は、整合性チェックをするようには設計されていない。 しかし、 \fIgunzip\fP は壊れた .Z ファイルを検知することができる場合もある。.Z
ファイルを 伸長しているときにエラーが出たときには、 単に標準の \fIuncompress\fP がエラーを出さないという理由で .Z
ファイルが正しいと考えてはならない。 一般的にいうと、標準的な \fIuncompress\fP
は入力をチェックせず、脳天気にゴミを出力してしまうことがある。 SCO の compress \-H 形式 (lzh 圧縮法) は CRC
を含んでいないが、いくつかの整合性チェックができる。
.PP
\fIzip\fP によって作られたファイルは、'deflation' 法で圧縮された元ファイルを 1 つしか
含まない場合にだけ、gzip で伸長することができる。この特徴は、tar.zip ファイルを
tar.gz 形式へ変換する際の補助となることだけを意図している。
元ファイルが 1 つだけの \fIzip\fP ファイルを伸長するには、\fIgunzip <foo.zip\fP
や \fIgunzip \-S .zip foo.zip\fP といったコマンドを使用する。
複数の元ファイルを含んでいる zip ファイルを伸長するためには、
\fIgunzip\fP ではなく \fIunzip\fP を使うこと。
.PP
\fIzcat\fP は \fIgunzip\fP \fB\-c\fP と同一である。 (\fIcompress\fP へのオリジナルのリンクを保存するために、 \fIzcat\fP
が \fIgzcat\fP としてインストールされているシステムがあるかもしれない。)  \fIzcat\fP
はコマンドラインで指示されるファイルのリストまたは標準入力を伸長し、 伸長したデータを標準出力に書き出す。 \fIzcat\fP はファイルが
\fB\&.gz\fP という拡張子であるかどうかわらず、 正しいマジックナンバーを持っているファイルであれば伸長しようとする。
.PP
\fIgzip\fP は \fIzip\fP と PKZIP で使われている Lempel\-Ziv アルゴリズムを使う。
得られる圧縮量は、入力のサイズと共通の部分データ列の分布に依存する。 一般に、ソースコードや英文といったテキストでは 60\-70% 小さくなる。
(\fIcompress\fP に使われている) LZW・ (\fIpack\fP に使われている) Huffman コーディング・ (\fIcompact\fP
に使われている) 適応 Huffman コーディング、 これらによる圧縮に比べて、この圧縮率は一般にかなり良い。
.PP
たとえ圧縮されたファイルが元ファイルより少し大きくなるとしても、 圧縮は常に行われる。 最悪の場合、gzip ファイルヘッダのための数バイトと 32K
バイトブロック毎に 5 バイトの増加となり、 大きなファイルでは 0.015% の増加率となる。 ただし実際の使用ディスクブロック数は、
ほとんど絶対に増加しない。 \fIgzip\fP は圧縮・伸長時にファイルのアクセス権・所有者・タイムスタンプを保存する。
.PP
\fIgzip\fP ファイル形式は P. Deutsch, \s-1GZIP\s0 file format
specification version 4.3,
<ftp://ftp.isi.edu/in\-notes/rfc1952.txt>, Internet RFC 1952
(May 1996)で規定されている。\fIzip\fP deflation 形式は P. Deutsch,
\s-1DEFLATE\s0 Compressed Data Format Specification version 1.3,
<ftp://ftp.isi.edu/in\-notes/rfc1951.txt>, Internet RFC 1951
(May 1996) で規定されている。

.SH オプション
.TP 
\fB\-a \-\-ascii\fP
アスキーテキストモード：局所変換を使って行末の変換をする。 このオプションはいくつかの非 Unix システムでサポートされている。 MSDOS
では、圧縮時に CR LF が LF に変換され、 伸長時に LF が CR LF に変換される。
.TP 
\fB\-c \-\-stdout \-\-to\-stdout\fP
出力を標準出力に書き出し、元ファイルを変更しない。 入力ファイルが複数ある場合、出力はファイル毎に圧縮されたものとなる。
圧縮率を上げるには、圧縮する前にすべての入力ファイルを (tar などで) まとめること。
.TP 
\fB\-d \-\-decompress \-\-uncompress\fP
伸長する。
.TP 
\fB\-f \-\-force\fP
ファイルが複数のリンクを張られていたり、 対応するファイルが既に存在していたり、 圧縮されたデータが端末に対して読み書きされてしているような場合でも、
強制的に圧縮・伸長を行う。 入力データが \fIgzip\fP で認識できない形式のときに \-\-stdout オプションが指定されていると、
入力データは変更なしに標準出力にコピーされる。 つまり、 \fIzcat\fP を \fIcat\fP として動作させる。 \fB\-f\fP
が指定されず、かつバックグラウンドで動作していない場合、 \fIgzip\fP は既に存在するファイルを上書きするかを問い合わせるプロンプトを出す。
.TP 
\fB\-h \-\-help\fP
ヘルプ画面を表示して終了する。
.TP 
\fB\-l \-\-list\fP
圧縮された個々のファイルについて、以下のフィールドを列挙する。

    compressed size: 圧縮されたファイルのサイズ
    uncompressed size: 伸長されたファイルのサイズ
    ratio: 圧縮率 (不明の場合は 0.0%)
    uncompressed_name: 伸長されたファイルの名前

compress でつくられた .Z ファイルのように、 gzip 形式でないファイルの伸長時サイズは \-1 にされる。
そのようなファイルについて伸長されたファイルのサイズを求める場合は、

    zcat file.Z | wc \-c

を使うこと。\-\-verbose オプションと組み合わせると 以下のフィールドも表示される。

    method: 圧縮法
    crc: 伸長されたデータの 32 ビット CRC
    date & time: 伸長されたファイルのタイムスタンプ

現在サポートされている圧縮法は、deflate, compress, lzh (SCO compress \-H), pack である。 gzip
形式でないファイルについて、crc は ffffffff とされる。

\-\-name が同時に指定されると、(もし記録されているなら)  伸長されたファイルの名前・日付・時刻は 圧縮ファイル内に記録されているものになる。

\-\-verbose が同時に指定されると、どれかのファイルのサイズが不明でない限り、 サイズの合計とその圧縮率も表示される。 \-\-quiet
が同時に指定されると、タイトルと合計の行は表示されない。
.TP 
\fB\-L \-\-license\fP
\fIgzip\fP のライセンスを表示して終了する。
.TP 
\fB\-n \-\-no\-name\fP
デフォルトでは、圧縮時に元ファイルの名前とタイムスタンプを保存させない。 (元の名前を切り詰める必要がある場合は、元の名前は必ず保存される。)
伸長時に、元のファイル名が存在しても復元せず (圧縮ファイル名から \fIgzip\fP 拡張子を取り除くだけとし)、
元ファイルのタイムスタンプが存在しても復元しない (圧縮ファイルからコピーする)。 このオプションは伸長時のデフォルトである。
.TP 
\fB\-N \-\-name\fP
圧縮時に元ファイルの名前とタイムスタンプを保存する。 これがデフォルトである。 伸長時に元ファイルの名前とタイムスタンプが存在するなら復元する。
このオプションは、ファイル名の長さに制限があるシステムや、 ファイル転送の後にタイムスタンプが失われた場合に役立つ。
.TP 
\fB\-q \-\-quiet\fP
すべての警告を抑制する。
.TP 
\fB\-r \-\-recursive\fP
ディレクトリ構造を再帰的に巡る。 コマンドラインで指定されたファイル名がディレクトリであった場合、 \fIgzip\fP
はディレクトリに降りて、見つかったすべてのファイルを圧縮する (\fIgunzip\fP の場合は、すべてのファイルを伸長する)。
.TP 
\fB\-S .suf \-\-suffix .suf\fP
拡張子 .gz のかわりに .suf を使う。 どのような拡張子でも指定することができるが、.z と .gz 以外の拡張子は 使うべきでない。
他のシステムにファイルが転送されたときの混乱を避けるためである。 拡張子なしの場合、以下のように拡張子に関係なく、 すべての指示されたファイルを
gunzip に伸長させることができる。

    gunzip \-S "" *       (MSDOS の場合は *.*)

前のバージョンの gzip は拡張子 .z を使った。 これは \fIpack\fP(1)  との衝突を避けるために変更された。
.TP 
\fB\-t \-\-test\fP
テストする。圧縮ファイルの整合性をチェックする。
.TP 
\fB\-v \-\-verbose\fP
詳細出力。圧縮・伸長される各ファイルについて名前と圧縮率を表示する。
.TP 
\fB\-V \-\-version\fP
バージョン。バージョン番号とコンパイルオプションを表示して終了する。
.TP 
\fB\-# \-\-fast \-\-best\fP
指定した数字 \fI#\fP を用いて圧縮のスピードを調整する。 \fB\-1\fP と \fB\-\-fast\fP は最も速い圧縮法を示す (圧縮率は低い)。 \fB\-9\fP
と \fB\-\-best\fP は最も遅い圧縮法を示す (圧縮率は最も高い)。 デフォルトの圧縮レベルは \fB\-6\fP である
(つまり、速さを犠牲にして圧縮率の良い方にしてある)。
.SH 高度な使用法
複数の圧縮ファイルを連結することができる。 この場合、 \fIgunzip\fP はすべての圧縮ファイルを一度に伸長する。たとえば、

      gzip \-c file1  > foo.gz
      gzip \-c file2 >> foo.gz

の後に

      gunzip \-c foo

とするのは、以下と同じである。

      cat file1 file2

\&.gz ファイルのうち 1 つのファイルが壊れても、 (壊れたファイルを削除すれば) 他のファイルはまだ回復できる。
しかし、次のようにすべてのファイルを一度に圧縮すれば、より高い圧縮が得られる。

      cat file1 file2 | gzip > foo.gz

これは下の例より高く圧縮できる。

      gzip \-c file1 file2 > foo.gz

より高い圧縮を得るために、結合されたファイルをもう一度圧縮するには、 次のようにすること。

      gzip \-cd old.gz | gzip > new.gz

圧縮ファイルが複数の元ファイルで構成されている場合、 \-\-list オプションで表示される伸長時のサイズと CRC は、
最後の元ファイルについてのみ適用されたものである。 すべての元ファイルについて伸長時のサイズが必要な場合は、 次のコマンドを使うこと。

      gzip \-cd file.gz | wc \-c

複数の元ファイルからなる 1 つの書庫ファイルを作って、 後から元ファイルを別々に伸長できるようにしたいなら、 tar や zip
といったアーカイバーを使うこと。 GNU tar は gzip を透過的に起動するために \-z オプションをサポートしている。 gzip は tar
の代用としてではなく、補助として設計されている。
.SH 環境変数
環境変数
\fBGZIP\fP
に
\fIgzip\fP
のデフォルトのオプションセットを入れることができる。
これらのオプションは最初に解釈されるので、
明示的なコマンドラインパラメータで上書きすることができる。
例を示す。
      sh の場合:    GZIP="\-8v \-\-name"; export GZIP
      csh の場合:   setenv GZIP "\-8v \-\-name"
      MSDOS の場合: set GZIP=\-8v \-\-name

Vax/VMS では、環境変数の名前は GZIP_OPT である。 これは、プログラムを呼び出すためのシンボルセットとの衝突を避けるためである。
.SH 関連項目
znew(1), zcmp(1), zmore(1), zforce(1), gzexe(1), zip(1), unzip(1),
compress(1), pack(1), compact(1)
.PP
\fIgzip\fP ファイル形式は P. Deutsch, \s-1GZIP\s0 file format
specification version 4.3,
\fB<ftp://ftp.isi.edu/in\-notes/rfc1952.txt>\fP, Internet RFC 1952
(May 1996) で規定されている。\fIzip\fP deflation 形式は P. Deutsch,
\s-1DEFLATE\s0 Compressed Data Format Specification version 1.3,
\fB<ftp://ftp.isi.edu/in\-notes/rfc1951.txt>\fP, Internet RFC 1951
(May 1996) で規定されている。
.SH 返り値
通常、終了状態は 0 である。 エラーが起きた場合、終了状態は 1 である。 警告が起きた場合、終了状態は 2 である。
.TP 
Usage: gzip [\-cdfhlLnNrtvV19] [\-S suffix] [file ...]
無効なオプションがコマンドラインから指定された。
.TP 
\fIfile\fP\^: not in gzip format
\fIgunzip\fP に指示されたファイルが圧縮されたものではない。
.TP 
\fIfile\fP\^: Corrupt input. Use zcat to recover some data.
圧縮されたファイルが壊れている。 破損した位置までのデータは、次のコマンドを使って修復できる。

      zcat \fIfile\fP > recover
.TP 
\fIfile\fP\^: compressed with \fIxx\fP bits, can only handle \fIyy\fP bits
\fIファイル\fP が、このマシン上での伸長コードより多くの \fIビット\fP を扱うことができるプログラムで (LZW を使って) 圧縮されている。
より高い圧縮ができ、メモリ使用量の少ない、gzip を使って ファイルを再圧縮すること。
.TP 
\fIfile\fP\^: already has .gz suffix \-\- no change
ファイルが既に圧縮されていると考えられる。 ファイル名を変更し、再度試みること。
.TP 
\fIfile\fP already exists; do you wish to overwrite (y or n)?
出力ファイルで置き換えたいなら "y" と答えること。 さもなければ、"n" と答えること。
.TP 
gunzip: corrupt input
SIGSEGV 違反が検知された。通常は、入力ファイルが壊れていることを意味している。
.TP 
\fIxx.x%\fP 圧縮により節約された入力のパーセント表示。
(\fB\-v\fP と \fB\-l\fP のみに関連する。)
.TP 
\-\- not a regular file or directory: ignored
入力ファイルが通常ファイルでもディレクトリでもない場合 (たとえば、シンボリックリンク・ソケット・FIFO・デバイスファイルの場合)、
変更せずにそのままにされる。
.TP 
\-\- has \fIxx\fP other links: unchanged
入力ファイルにリンクが張られているので、変更しない。 詳しい情報は \fIln\fP(1)  を参照すること。
複数にリンクが張られているファイルを強制的に圧縮するには \fB\-f\fP フラグを使うこと。
.SH 重要な注意
圧縮されたデータをテープに書き込むときは、
一般的に、出力のブロック境界をゼロで埋める必要がある。
伸長のためにデータを読み込んですべてのブロックを
\fIgunzip\fP
に渡すと、
\fIgunzip\fP
は通常、圧縮されたデータの後ろに余分なゴミが続いていると検知して、
警告を発する。
この警告を抑制するには \-\-quiet オプションを使う必要がある。
このオプションは環境変数
\fBGZIP\fP
に次のようにして設定できる。
  sh の場合:  GZIP="\-q"  tar \-xfz \-\-block\-compress /dev/rst0
  csh の場合: (setenv GZIP \-q; tar \-xfz \-\-block\-compress /dev/rst0

上の例では、gzip は GNU tar の \-z オプションによって暗に呼び出されている。 テープ上の圧縮されたデータの読み出しと書き込みに
同じブロックサイズ (tar の \-b オプション) が使われていることに注意すること。 (この例は、GNU 版の tar を使うことを仮定している。)
.SH バグ
gzip 形式では、入力サイズは 2^32 の余りで表現されるため、 \-\-list オプション
による表示では、圧縮前のファイルが 4GB 以上の場合、圧縮前のサイズや圧縮率が
正しく表示されない。以下のコマンドを使うと、この問題に抵触せずに、
大きな圧縮ファイルの本当のサイズを知ることができる。

      zcat file.gz | wc \-c

圧縮ファイルがシークをサポートしていないメディア上に存在する場合、 \-\-list オプションによる表示は、
サイズが \-1、crc が ffffffff となる。

稀に \-\-best オプションによって、デフォルトの圧縮レベル (\-6) より 圧縮が悪くなることがある。 非常に冗長なファイルでは、
\fIcompress\fP による圧縮が \fIgzip\fP より良くなることがある。
.SH 著作権表示
Copyright \(co 1998, 1999, 2001, 2002 Free Software Foundation, Inc.
.br
Copyright \(co 1992, 1993 Jean\-loup Gailly
.PP
Permission is granted to make and distribute verbatim copies of this manual
provided the copyright notice and this permission notice are preserved on
all copies.
.ig
Permission is granted to process this file through troff and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).
..
.PP
Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided that the entire
resulting derived work is distributed under the terms of a permission notice
identical to this one.
.PP
Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation approved
by the Foundation.
