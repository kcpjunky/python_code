.\" Copyright (c) 1993 Michael Haardt (michael@moria.de),
.\"   Fri Apr  2 11:32:09 MET DST 1993
.\" and Andries Brouwer (aeb@cwi.nl), Fri Feb 14 21:47:50 1997.
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 2 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, write to the Free
.\" Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111,
.\" USA.
.\"
.\" Modified Sun Jul 25 10:45:30 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sun Jul 21 21:25:26 1996 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Mon Oct 21 17:47:19 1996 by Eric S. Raymond (esr@thyrsus.com)
.\" Modified Wed Aug 27 20:28:58 1997 by Nicolás Lichtmaier (nick@debian.org)
.\" Modified Mon Sep 21 00:00:26 1998 by Andries Brouwer (aeb@cwi.nl)
.\" Modified Wed Jan 24 06:37:24 2001 by Eric S. Raymond (esr@thyrsus.com)
.\" Modified Thu Dec 13 23:53:27 2001 by Martin Schulze <joey@infodrom.org>
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ENVIRON 7 2009\-07\-25 Linux "Linux Programmer's Manual"
.SH 名前
environ \- ユーザ環境
.SH 書式
.nf
\fBextern char **\fP\fIenviron\fP\fB;\fP
.br
.fi
.SH 説明
変数 \fIenviron\fP は「環境 (environment)」と呼ばれる文字列へのポインタの配列である。 この配列の最後のポインタの値は NULL
である。 (この変数はユーザープログラムで宣言しなければならない。 ただし libc4 や libc5 のヘッダーファイルなら
\fI<unistd.h>\fP で宣言されているし、これが glibc 由来のものでも \fB_GNU_SOURCE\fP が define
されていれば宣言済みとなる)。 この文字列配列は、 プロセスを起動する \fBexec\fP(3)  によって、その起動されたプロセスで利用できるようになる。

通例では、 \fIenviron\fP の文字列は "\fIname\fP\fB=\fP\fIvalue\fP" という書式をとる。 よく用いられる例を以下に示す。
.TP 
\fBUSER\fP
ユーザのログイン名 (BSD 起源のプログラムなどによって使用される)。
.TP 
\fBLOGNAME\fP
ユーザのログイン名(System V 起源のプログラムなどによって使用される)。
.TP 
\fBHOME\fP
ユーザのログインディレクトリ。 \fBlogin\fP(1)  がパスワードファイル \fBpasswd\fP(5)  から取得して設定する。
.TP 
\fBLANG\fP
ロケールの各カテゴリで使用されるロケールの名前。\fBLC_ALL\fP や、 より狭い範囲を対象とする環境変数 (\fBLC_COLLATE\fP,
\fBLC_CTYPE\fP, \fBLC_MESSAGES\fP, \fBLC_MONETARY\fP, \fBLC_NUMERIC\fP, \fBLC_TIME\fP など)
によって上書きされることもある。 \fBlocale\fP(5)  を見よ。
.TP 
\fBPATH\fP
\fBsh\fP(1)  や他のプログラムが、フルパスで与えられなかった実行ファイルを検索するとき、 ファイル名に前置されるディレクトリの配列。
各ディレクトリは \(aq\fB:\fP\(aq によって区切られる。 (同じようなものに、 シェルがディレクトリ変更コマンドの変更先を探すために用いる
\fBCDPATH\fP や、 \fBman\fP(1)  がマニュアルページの検索に用いる \fBMANPATH\fP などがある。)
.TP 
\fBPWD\fP
現在のワーキングディレクトリ。いくつかのシェルが設定する。
.TP 
\fBSHELL\fP
ユーザーのログインシェルのパス名。
.TP 
\fBTERM\fP
端末の種類。出力はこれにあわせて用意される。
.TP 
\fBPAGER\fP
テキストファイルを表示するユーテリティ。ユーザーが好みのものを設定する。
.TP 
\fBEDITOR\fP/\fBVISUAL\fP
.\" .TP
.\" .B BROWSER
.\" The user's preferred utility to browse URLs. Sequence of colon-separated
.\" browser commands. See http://www.catb.org/~esr/BROWSER/ .
テキストファイルを編集するユーテリティ。ユーザーが好みのものを設定する。
.PP
環境に名前を追加する場合には、 \fBsh\fP(1)  では \fIexport\fP コマンドと "name=value" を使用する。 \fBcsh\fP(1)
では \fIsetenv\fP コマンドを使用する。 \fBexec\fP(3)  の引数としても環境を設定することができる。 C プログラムからは、
\fBgetenv\fP(3), \fBputenv\fP(3), \fBsetenv\fP(3), \fBunsetenv\fP(3)
などの関数を用いて環境を扱うことができる。

プログラムやライブラリルーチンの多くは、それぞれ適当な環境変数の存在 や値によって、動作に影響を受けることがある。以下、適宜挙げてみよう。
.LP
\fBLANG\fP, \fBLANGUAGE\fP, \fBNLSPATH\fP, \fBLOCPATH\fP, \fBLC_ALL\fP, \fBLC_MESSAGES\fP,
などの変数。ロケールの扱いに影響する。 \fBlocale\fP(5)  を見よ。
.LP
\fBTMPDIR\fP は \fBtmpnam\fP(3)  などのルーチンによって作成されるファイル名に前置されるパスに影響する。また \fBsort\fP(1)
の一時ディレクトリに用いられたり、他のプログラムからも利用される。
.LP
\fBLD_LIBRARY_PATH\fP, \fBLD_PRELOAD\fP などの LD_* 変数はダイナミックローダ・リンカの動作に影響する。
.LP
\fBPOSIXLY_CORRECT\fP が指定されると、ある種のプログラムやライブラリルーチンは POSIX の規定に従うようになる。
.LP
\fBmalloc\fP(3)  の動作は \fBMALLOC_*\fP 変数によって影響される。
.LP
\fBHOSTALIAS\fP 変数は、 \fBgethostbyname\fP(3)  が用いるエイリアスが書かれているファイル名を与える。
.LP
\fBTZ\fP と \fBTZDIR\fP は \fBtzset\fP(3)  および、この関数を使う \fBctime\fP(3), \fBlocaltime\fP(3),
\fBmktime\fP(3), \fBstrftime\fP(3)  といった関数で用いられるタイムゾーンの情報を与える。 \fBtzselect\fP(8)
も参照のこと。
.LP
\fBTERMCAP\fP は、現在の端末情報の取得先 (あるいはそのような情報が書かれているファイル名) を与える。
.LP
\fBCOLUMNS\fP と \fBLINES\fP アプリケーションにウインドウのサイズを伝える。 実際のサイズとは違う値を与えることもできる。
.LP
\fBPRINTER\fP または \fBLPDEST\fP 用いたいプリンタを指定する。 \fBlpr\fP(1)  を参照のこと。
.LP
などなど...
.SH バグ
これらの中には、明らかにセキュリティ上の危険が存在する。 ユーザーが \fBIFS\fP や \fBLD_LIBRARY_PATH\fP
に異常な値を与えたことによって、 これまで多くのシステムコマンドがだまされて、 システムをひどい目にあわせてきた。

名前空間が汚染される危険性も存在する。 \fImake\fP や \fIautoconf\fP のようなプログラムでは、デフォルトのユーティリティを
環境にある似たような名前の変数で上書きすることができる (通常はすべて大文字の変数を用いる)。 すなわち、利用したい C コンパイラは \fBCC\fP
で選択できる。また同様に \fBMAKE\fP, \fBAR\fP, \fBAS\fP, \fBFC\fP, \fBLD\fP, \fBLEX\fP, \fBRM\fP, \fBYACC\fP
なども用いることができる。 ところが一方では、このような変数を (パス名ではなく)  プログラムに対するオプションとして扱うような流儀も存在してきた。
例えば \fBMORE\fP, \fBLESS\fP, \fBGZIP\fP などがそうである。 このような利用法は間違っていると考えるべきで、
新しいプログラムでは避けるべきである。 \fIgzip\fP の作者たちは、オプションを与える環境変数を \fBGZIP_OPT\fP
に改名することを考えるほうがよい。
.SH 関連項目
\fBbash\fP(1), \fBcsh\fP(1), \fBlogin\fP(1), \fBsh\fP(1), \fBtcsh\fP(1), \fBexecve\fP(2),
\fBclearenv\fP(3), \fBexec\fP(3), \fBgetenv\fP(3), \fBputenv\fP(3), \fBsetenv\fP(3),
\fBunsetenv\fP(3), \fBlocale\fP(5)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
