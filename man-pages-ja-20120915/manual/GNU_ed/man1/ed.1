.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ED 1 "3 July 2010"  
.SH 名前
ed, red \- 行指向のテキストエディタ
.SH 書式
ed [\-GVhs] [\-p \fIstring\fP] [\fIfile\fP]
.LP
red [\-GVhs] [\-p \fIstring\fP] [\fIfile\fP]
.SH 説明
\fBed\fP は、行指向のテキストエディタです。本コマンドを用いることで、
テキストファイルの生成、表示、変更その他の操作を行なうことができます。
\fBred\fP は制限付きの \fBed\fP です。 \fBred\fP では、カレントディレクトリの
ファイルのみを編集でき、シェルコマンドの実行はできません。

\fIfile\fP 引数を指定して本コマンドを起動すると、ファイル \fIfile\fP のコピー
をエディタのバッファに読み込みます。以後の変更はそのコピーに対して行な
われ、 \fIfile\fP で指定したファイル自身が直接変更されることはありません。
\fBed\fP コマンドを終了する際、\fI`w'\fP コマンドで明示的にセーブしなかった
変更点はすべて失われます。

編集は、\fIコマンド\fPモードと\fI入力\fPモードの 2 つの異なるモードを
使い分けて行ないます。 \fBed\fP を起動したら、まずコマンドモードに入ります。
本モードでは、標準入力からコマンドを読み込み、それを実行することで
エディタバッファの内容操作を行ないます。
典型的なコマンドは、以下のようなものです。
.sp
.RS
,s/\fIold\fP/\fInew\fP/g
.RE
.sp
これは、編集しているテキストファイル中に \fIold\fP という文字列があったら、
これらをすべて文字列 \fInew\fP に置き換えるコマンドです。

\fI`a'\fP (append)、\fI`i'\fP (insert)、あるいは \fI`c'\fP (change) といった
入力コマンドが入力された場合、 \fBed\fP は入力モードに移行します。
これが、ファイルにテキストを追加する主たる方法です。
このモードでは、コマンドを実行することはできません。
そのかわり、標準入力から入力されたデータは、
直接エディタバッファへと書き込まれます。
行は、改行キャラクタまでのテキストデータおよび、
最後の\fI改行\fPキャラクタを含むデータから構成されます。
ピリオド 1 つだけ (\fI.\fP) の行を入力すると、入力モードを終了します。

すべての \fBed\fP コマンドは、全ての行もしくは指定した範囲の行の操作が可能
です。例えば、 \fI`d'\fP コマンドは指定した行を削除し、 \fI`m'\fP コマンドは
指定した行を移動します。上に示した例のように、置換によってある行の一部
分のみを変更することは可能ですが、 \fI`s'\fP コマンドは、一度に全部の行に
わたって変更を行なうことも可能です。

一般的には、 \fBed\fP コマンドは、0 個以上の行番号および、
それに連なる 1 文字コマンドから成り立ちます。場合によっては追加の
パラメータをもつこともあります。
いうなれば、コマンドは以下の構造を持ちます。
.sp
.RS
\fI[address [,address]]command[parameters]\fP
.RE
.sp
アドレス (行番号) はコマンドの操作対象行あるいは対象行範囲を示します。
アドレスの指定個数が、コマンドが受け付け可能な個数よりも少ない場合には、
デフォルトのアドレスが採用されます。

.SS オプション
.TP  8
\-G
強制的に後方互換性を有効にします。コマンド \fI`G'\fP, \fI`V'\fP, \fI`f'\fP,
\fI`l'\fP, \fI`m'\fP, \fI`t'\fP, and \fI`!!'\fP に影響があります。
.TP  8
\-s
診断メッセージを抑制します。本オプションは、
\fBed\fP の入力がスクリプトによって行なわれる場合に有効です。

.TP  8
\-p\fI\ string\fP
コマンドプロンプトとして表示する文字列を指定します。
コマンドプロンプトは、コマンドモードで \fI`P'\fP コマンドを実行することで、
表示する/しないを切り替えることが可能です。

.TP  8
\fIfile\fP
編集対象のファイルを指定します。ファイル名の先頭に感嘆符 (!) が付加され
ていた場合、そのファイル名はシェルコマンドとして解釈されます。この場合、
編集対象として読み込まれるテキストは、\fIsh\fP(1) が \fIfile\fP で指定した
コマンドを実行した結果、標準出力に出力されるデータです。先頭が感嘆符で
始まるファイルを編集する場合には、ファイル名の先頭にバックスラッシュ
(\e) を付加して下さい。感嘆符以外の文字で始まるファイル名については、
編集対象のファイル名は \fIfile\fP となります。

.SS 行指定
行は、バッファ内の行番号で表現されます。 \fBed\fP は \fI現在行\fP を管理して
おり、コマンドに行番号が指定されない場合は、現在行がデフォルト行として
用いられます。ファイルが最初に読み出された直後は、現在行はファイルの
最後の行となります。一般的に、現在行はコマンドが操作した最後の行と
なります。

行番号は、以下の一覧のうち 1 つおよび、補助的に付加される
相対行番号 (オフセット) から構成されます。相対行番号は、
任意の数字の組み合わせ、演算子 (\fI+\fP, \fI\-\fP)、
そして空白文字を含みます。行番号は、左から右に解釈され、
それらの演算子を含む値は、現在行からの相対行番号と解釈されます。

行番号の表現に関して上記の規則が適用される中で、
行番号 \fI0\fP (ゼロ) に関しては、例外的な扱いがされます。
これは「最初の行より前」を意味し、
それが正しい意味を持つ場合は常に利用可能です。

行範囲は、コンマもしくはセミコロンで区切られた 2 つのアドレスで
示されます。最初に指定される行番号は、2 番目に指定される行番号を
超える値を指定してはいけません。行範囲指定で行番号が 1 つしか指定
されなかった場合には、2 番目に指定されるアドレスとして最初に指定
されたアドレスが設定されます。ここで 3 個以上の行番号が指定されると、
最後の 2 つの行番号で決定される範囲がコマンド実行対象になります。
行番号の指定を 1 つだけしか想定していないコマンドの場合、
最後の 1 つの行番号の行がコマンド実行対象となります。

コンマで区切られた各行番号は、現在行からの相対行を指し示します。
セミコロンで区切られている場合は、範囲の始めの行は現在行が設定され、
範囲の終りは始めの行からの相対行で表わされます。


行番号の指定には、以下のシンボルが使用可能です。

.TP  8
\&.
バッファ中の現在行を表します。

.TP  8
$
バッファ中の最終行を表します。

.TP  8
\fIn\fP
バッファ内の \fIn\fP 番目の行を表します。
\fIn\fP は \fI[0,$]\fP の間です。

.TP  8
\-
1 行前の行です。相対行指定 \fI\-1\fP と同等であり、
複数指定することで効果を累積することが可能です。

.TP  8
^\fIn\fP
\fIn\fP 行前の行を表します。 \fIn\fP は、負でない整数です。

.TP  8
+
次の行を表します。
これは、\fI+1\fP と同様であり、 \fI\-\fP と同様の累積的指定が可能です。

.HP
\fIwhitespace n\fP
.TP  8
+\fIn\fP
\fIn\fP 行後ろの行を表します。
\fIn\fP は、負でない整数です。
\fIn\fP の前に \fIwhitespace (空白文字)\fP を付加して指定した場合も
\fI+n\fP と解釈されます。

.TP  8
,
バッファの最初から最後までを表します。
これは \fI1,$\fP と指定した場合と同等です。

.TP  8
;
バッファ中の現在行から最後の行までを表します。これは、
\&\fI.,$\fP と指定した場合と同等です。

.TP  8
/\fIre\fP/
指定された正規表現 \fIre\fP を含む、(現在行よりも後ろの) 次の行を表します。
必要であれば、文字列検索はテキスト先頭に折り返し、現在行に達するまで
検索を行ないます。 // は、最後に行なった検索を繰り返します。

.TP  8
?\fIre\fP?
指定した正規表現 \fIre\fP を含む、現在行より前の行を表します。
必要であれば、文字列検索はテキストの最後に折り返し、
現在行に達するまで検索を行ないます。
?? は、最後に行なった検索を繰り返します。

.TP  8
\&'\fIlc\fP
\fI`k'\fP (mark)  コマンドでマークをつけた行を表します。
ここで \fIlc\fP は英小文字 1 文字です。

.SS 正規表現
正規表現はテキストを選択する際に用いるパターンです。
例えば次の \fBed\fP コマンド
.sp
.RS
g/\fIstring\fP/
.RE
.sp
は \fIstring\fP を含む全ての行を表示します。
正規表現は \fI`s'\fP コマンドで古いテキストを新しいテキストで
置き換える際にも用いられます。

文字リテラルを指定するのに加え、正規表現は文字列のクラスを表現すること
ができます。このようにして表現された文字列は、それに対応する正規表現に
「マッチする」と言います。ある正規表現が一つの行の中の複数の文字列に
マッチする場合、マッチする部分のうち最も左にあって最も長いものが選択
されます。

正規表現を組み立てる際には以下のシンボルが用いられます:

.TP  8
c
以下に挙げるものを除く任意の文字 \fIc\fP は、その文字自身にマッチします。
このような文字には `{', '}', `(', `)', `<', `>' が含まれます。

.TP  8
\e\fIc\fP
バックスラッシュでエスケープした文字 \fIc\fP は、その文字自身にマッチ
します。ただし `{', '}', `(', `)', `<', `>' を除きます。

.TP  8
\&.
任意の一文字にマッチします。

.TP  8
\fI[char\-class]\fP
文字クラス \fIchar\-class\fP に含まれる任意の一文字にマッチします。
文字クラス \fIchar\-class\fP に `]' を含めるには、文字 `]' を最初の文字に
指定します。文字の範囲を指定するには、範囲の両端の文字の間を `\-' で
つなぎます。例えば `a\-z' は小文字全体を表します。
以下のようなリテラル表記も、文字集合を指定するために文字クラス
\fIchar\-class\fP で使用することができます:
.sp
.nf
\ \ [:alnum:]\ \ [:cntrl:]\ \ [:lower:]\ \ [:space:]
.PD 0
\ \ [:alpha:]\ \ [:digit:]\ \ [:print:]\ \ [:upper:]
.PD 0
\ \ [:blank:]\ \ [:graph:]\ \ [:punct:]\ \ [:xdigit:]
.fi
.sp
文字クラス \fIchar\-class\fP の最初あるいは最後の文字として `\-' が用いられ
ると、それはその文字自身にマッチします。文字クラス \fIchar\-class\fP 中の
これ以外の文字は全て、それら自身にマッチします。
.sp
以下の形式の文字クラス \fIchar\-class\fP のパターン
.sp
\ \ [.\fIcol\-elm\fP.] と
.PD 0
\ \ [=\fIcol\-elm\fP=]
.sp
は \fBlocale\fP(5) に沿って解釈されます (現在のところサポートされません)。
ここで \fIcol\-elm\fP は \fIcollating element\fP です。
詳しい説明は \fBregex\fP(3) を参照して下さい。

.TP  8
[^\fIchar\-class\fP]
文字クラス \fIchar\-class\fP に含まれない、改行以外の任意の一文字に
マッチします。文字クラス \fIchar\-class\fP は上で定義しています。

.TP  8
^
\fI`^'\fP が正規表現の最初の文字である場合、その正規表現は行頭でのみ
マッチします。それ以外の場合、 \fI`^'\fP はそれ自身にマッチします。

.TP  8
$
\fI`$'\fP が正規表現の最後の文字である場合、その正規表現は行末でのみ
マッチします。それ以外の場合、 \fI`$'\fP はそれ自身にマッチします。

.TP  8
\e(\fIre\fP\e)
部分式 (subexpression) \fIre\fP を定義します。部分式はネストできます。
これ以降、 `\e\fIn\fP' の形式の後方参照は、
\fIn\fP 番目の部分式にマッチしたテキストに展開されます
(\fIn\fP は [1,9] の範囲の数)。
例えば、正規表現 `\e(a.c\e)\e1' は、
同じ文字列が隣接しているような任意の文字列にマッチします。
部分式は左側のデリミタから順に番号が振られます。

.TP  8
*
直前にある単一文字の正規表現あるいはその部分式のゼロ回以上の繰り返しに
マッチします。 \fI*\fP が正規表現あるいはその部分式の最初の文字として用い
られた場合、 \fI*\fP はその文字自身にマッチします。 \fI*\fP 演算子は時に予期
しない結果をもたらすことがあります。例えば、正規表現 `b*' は文字列
`abbb' の先頭にマッチします (部分文字列 `bbb' ではありません)。これは
ヌルへのマッチが最も左にあるマッチだからです。

.HP
\e{\fIn,m\fP\e}
.HP
\e{\fIn,\fP\e}
.TP  8
\e{\fIn\fP\e}
直前にある単一文字の正規表現あるいはその部分式の、 \fIn\fP 回以上 \fIm\fP 回
以下の繰り返しにマッチします。\fIm\fP が省略された場合、 \fIn\fP 回以上の繰り
返しにマッチします。さらにコンマも省略された場合、ちょうど \fIn\fP 回の
繰り返しにのみマッチします。この表現が正規表現や部分式の先頭に登場した
場合は、リテラルとして解釈されます (すなわち、正規表現 `\e{2\e}' は
文字列 `{2}' などにマッチします。

.HP
\e<
.TP  8
\e>
これに続く単一文字の正規表現あるいはその部分式が、 \fIワード\fP の先頭
(\e<) や末尾 (\e>) でのみマッチするようにします。
\fIワード\fP とは ASCII で英数字文字が続く文字列で最長のものです
(アンダースコア (_) も文字列に含まれます)。


.LP
以下の拡張演算子は、以前からの \fBed\fP の書式と区別するため、
バックスラッシュ (\e) から始まります。

.HP
\e\`
.TP  8
\e\'
無条件に、行の先頭 (\e\`) や行の末尾 (\e\') にマッチします。

.TP  8
\e?
1 文字の正規表現か直前の部分式が 0 個か 1 個ある場合にマッチします。
例えば、正規表現 `a[bd]\e?c' は、文字列 `abc', `adc', `ac' に
マッチします。 \e? が正規表現か部分式の先頭に登場した場合は、
リテラル `?' にマッチします。

.TP  8
\e+
1 文字の正規表現または直前の部分式の 1 回以上の繰り返しにマッチします。
正規表現 `a\e+' は `aa*' の短い書き方です。 \e+ が正規表現や部分式の
先頭に登場した場合は、リテラル `+' にマッチします。


.TP  8
\eb
ワードの先頭や末尾にマッチします (マッチするのは空文字列です)。
正規表現 `\ebhello\eb' は `\e<hello\e>' と同じです。
但し、 `\eb\eb' は有効な正規表現ですが、
`\e<\e>' はそうではありません。

.TP  8
\eB
ワード内にマッチします (マッチするのは空文字列です)。

.TP  8
\ew
ワードを構成する任意の文字にマッチします。

.TP  8
\eW
ワードを構成する文字以外の任意の文字にマッチします。

.SS コマンド
全ての \fBed\fP コマンドは、1 文字からなりますが、追加パラメータが必要な
コマンドもあります。コマンドのパラメータが複数の行にわたる場合には、
そのパラメータを含めたコマンドの終りを含む行を除き、行末に
バックスラッシュ (\e) を付加して下さい。

一般的には、1 行ごとに 1 コマンドを入れることが許されています。
しかしながら、ほとんどのコマンドは、コマンド実行を行なった後のデータ更新
その他を確認するために、
\fI`p'\fP (print), \fI`l'\fP (list), \fI`n'\fP (enumerate)
のような表示系のコマンドを同時に指定できます。

インタラプト (一般的には ^C) を入力することで、現在実行しているコマンド
を強制終了し、コマンドモードに戻すことができます。

\fBed\fP は、以下のコマンドを使用できます。コマンド実行時に何の指定もない
場合のデフォルトの行番号もしくは行範囲が括弧内に示されています。

.TP  8
(.)a
指定した行の後にテキストを追加します。行番号 0 (ゼロ) も指定できます。
テキストは入力モードで入力されていきます。
現在行番号は、入力された最後の行に設定されます。

.TP  8
(.,.)c
バッファ内の指定した行を変更します。指定した行のデータは、バッファから
消去され、そこに対してテキストデータを入力するようになります。テキスト
は入力モードで入力されていきます。現在行番号は、入力した最後の行に設定
されます。

.TP  8
(.,.)d
指定した範囲をバッファから削除します。削除した範囲の後に行が続いている
場合、現在行番号は、その行に設定されます。そうでない場合には、現在行番
号は、削除された範囲の前の行に設定されます。

.TP  8
e\fI\ file\fP
\fIfile\fP を編集し、デフォルトのファイル名を設定します。もし \fIfile\fP が
指定されなかった場合には、デフォルトのファイル名が使用されます。
本コマンド実行時に、それまで別のファイルを編集していた場合には、
その内容はすべて消去され、新しいファイルが読み込まれます。
現在行番号は、入力された最後の行に設定されます。

.TP  8
e !\fIcommand\fP
\fI!command\fP で指定されたコマンドを実行し、その結果として標準出力へ出力
されたデータを編集します (後述する \fI!command\fP を参照して下さい)。
デフォルトのファイル名は変更されません。\fIcommand\fP の出力が読み込まれる
前に、バッファ内に存在した行はすべて消去されます。現在行番号は、入力さ
れた最後の行に設定されます。

.TP  8
E\fI\ file\fP
無条件で \fIfile\fP で指定したファイルを読み込み、編集します。
\fIe\fP コマンドと動作は似ていますが、すでにバッファ上のデータに変更が
加えられている場合でも、未書き込みの変更を警告を出さずに捨ててしまう
点が異なります。現在行番号は、入力された最後の行に設定されます。

.TP  8
f\fI\ file\fP
デフォルトファイル名を \fIfile\fP に設定します。 \fIfile\fP 名が指定されない
場合には、デフォルトファイル名が表示されます。

.TP  8
(1,$)g\fI/re/command\-list\fP
\fIcommand\-list\fP で指定されたコマンドを、指定した正規表現 \fIre\fP に一致
する各行に対して実行します。現在行番号は、 \fIcommand\-list\fP で指定された
コマンドが実行される前に、指定した正規表現に一致した行に設定されます。
\fI`g'\fP コマンドが終了した場合、現在行番号は最後に \fIcommand\-list\fP 実行
の影響を受けた行に設定されます。

\fIcommand\-list\fP で指定されるコマンドは、1 行ごとに 1 つずつ書かれる
必要があります。各コマンド行の終りには、一番最後のコマンド行を除いては
バックスラッシュ (\e) を記述する必要があります。コマンド \fI`g'\fP,
\fI`G'\fP, \fI`v'\fP, \fI`V'\fP を除くすべてのコマンドを指定可能です。
\fIcommand\-list\fP 中の空行は、 \fI`p'\fP コマンドと同等に扱われます。

.TP  8
(1,$)G\fI/re/\fP
指定した正規表現 \fIre\fP に一致した行に対して、対話編集を行ないます。
指定した正規表現に一致する文字列を含む行があると、その行を表示し、
現在行番号を設定します。そして、ユーザに \fIcommand\-list\fP の入力を
促します。 \fI`G'\fP コマンドが終了した場合、現在行番号は、
\fIcommand\-list\fP 実行の影響を受けた最後の行に設定されます。

\fIcommand\-list\fP の記述形式は、 \fIg\fP コマンドで指定するものと同じです。
改行のみの場合は、コマンド実行をしない (ヌルコマンドリストを指定した)
ものとみなされます。`&' 文字のみを入力した場合には、直前に実行した
(ヌルコマンドリストではない) コマンドを再実行します。

.TP  8
H
エラーメッセージの出力の有無を切り替えます。デフォルトでは、
エラーメッセージは出力されません。ed スクリプトを作成する場合、
スクリプトのデバッグのために、本コマンドを最初に実行することを
おすすめします。

.TP  8
h
最後に表示されたエラーメッセージを表示します。

.TP  8
(.)i
編集バッファ中の現在行の前に、テキストを挿入します。
テキストは入力モードで入力されていきます。
現在行番号は、入力された最後の行に設定されます。

.TP  8
(.,.+1)j
指定した範囲の行を 1 行に連結します。指定した行はバッファから削除され、
その行の内容を含む 1 行に置き換えられます。
現在行番号は、置き換えられた行に設定されます。

.TP  8
(.)k\fIlc\fP
行に、英小文字 \fIlc\fP で指定したマークをつけます。
その後、マークをつけられた行は、コマンド中で \fI'lc\fP (つまり、
シングルクォートと小文字 \fIlc\fP) として指定できるようになります。
マークは、その行が削除されるかもしくは変更されるかしない限り、
消えることはありません。

.TP  8
(.,.)l
指定した範囲の行の内容を見やすく表示します。
端末から起動された場合、各ページの終わりで表示を一時停止し、
改行が入力されるまで待ちます。
現在行番号は、表示された最後の行に設定されます。

.TP  8
(.,.)m(.)
指定した範囲の行をバッファ内で移動します。指定した行は、コマンドの右辺
で指定した行の後ろに移動されます。移動先の行としては、\fI0\fP (ゼロ) が
指定可能です。現在行番号は、移動された最後の行の移動後の行に設定
されます。

.TP  8
(.,.)n
指定した行の内容を、行番号つきで表示します。
現在行番号は、表示された最後の行に設定されます。

.TP  8
(.,.)p
指定した範囲の行の内容を表示します。
端末から起動された場合、 \fBed\fP は各ページの終わりで表示を一時停止し、
改行が入力されるまで待ちます。
現在行番号は、表示された最後の行に設定されます。

.TP  8
P
コマンドプロンプト表示の有無を切り替えます。コマンド起動時のオプション
\fI\-p string\fP でプロンプトが指定されていなければ、コマンドプロンプトの
表示はデフォルトでオフになっています。

.TP  8
q
\fBed\fP を終了します。

.TP  8
Q
無条件に \fBed\fP を終了します。このコマンドは \fIq\fP コマンドと似ていますが、
まだファイルに書き出されていない変更があっても警告せずに終了する点が
異なります。

.TP  8
($)r\fI\ file\fP
\fIfile\fP で指定されたファイルを、指定した行の後ろに読み込みます。
\fIfile\fP が指定されない場合、デフォルトのファイル名が読み込みに使用され
ます。このコマンドに先だってデフォルトのファイル名が設定されていない場
合、デフォルトのファイル名には、\fIfile\fP で指定されたものが設定されます。
それ以外の場合、デフォルトのファイル名は変更されません。現在行番号は、
読み込まれたファイルの最後の行に設定されます。

.TP  8
($)r !\fIcommand\fP
\fIcommand\fP で指定されたコマンドを実行し、その結果として標準出力へ出力
されたデータを指定した行の後ろに読み込みます (後述する \fI! command\fP を
参照して下さい)。デフォルトのファイル名は変更されません。現在行番号は、
読み込まれた最後の行の行番号に設定されます。

.HP
(.,.)s\fI/re/replacement/\fP
.HP
(.,.)s\fI/re/replacement/\fPg
.HP
(.,.)s\fI/re/replacement/n\fP
.br
指定した行のテキスト中の、正規表現 \fIre\fP に一致する文字列を、文字列
\fIreplacement\fP に置き換えます。デフォルトでは、それぞれの行で最初に一致
した文字列のみを置き換えます。 \fI`g'\fP (global) サフィックスが指定された
場合、一致した文字列はすべて置き換えられます。 \fI`n'\fP サフィックス
(\fI`n'\fP は正の整数) が指定された場合、 \fI`n'\fP 回目に一致した文字列だけ
を置き換えます。指定した範囲で一度も文字列の置換が起こらなかった場合、
エラーとみなされます。現在行番号は、最後に置換が発生した行に設定
されます。

\fIre\fP および \fIreplacement\fP は、スペース、改行、 下記の \fI`s'\fP コマンド
で使用されるキャラクタ以外のすべてのキャラクタを用いて区切ることが可能
です。最後のデリミタのうち 1 つか 2 つが省略された場合、最後に文字列
置換が発生した行は、 \fI`p'\fP コマンドが指定された場合と同様に表示されま
す。


\fIreplacement\fP 中のエスケープされていない `&' は、一致した文字列と置き
換えられます。キャラクタシーケンス \fI`\em'\fP (\fI`m'\fP は [1,9] の範囲の
整数です) は、一致した文字列の\fI`m'\fP 番目の後方参照で置き換えられます。
\fIreplacement\fP の中に入る文字が `%' のみだった場合、最後に行なった置換
の \fIreplacement\fP が使用されます。改行を \fIreplacement\fP に指定したい
場合は、バックスラッシュを用いてエスケープすれば可能です。

.TP  8
(.,.)s
最後の置換を繰り返します。この形式の \fI`s'\fP コマンドには、回数を示す
サフィックス \fI`n'\fP と、文字 \fI`r'\fP, \fI`g'\fP, \fI`p'\fP の任意の
組み合わせを指定できます。 \fI`n'\fP が指定されると、 \fI`n'\fP 回目に一致し
た文字列だけが置換されます。 \fI`r'\fP サフィックスが指定されると、最後の
置換が発生した文字列の変わりに、最後に指定した正規表現が使用されます。
\fI`g'\fP サフィックスは、最後の置換で用いたグローバルサフィックスの使用の
有効/無効を切り替えます。\fI`p'\fP サフィックスは、最後の置換に指定された
プリントサフィックスを反転します。現在行番号は、最後に置換が発生した行
に設定されます。

.TP  8
(.,.)t(.)
指定した範囲の行を、コマンド文字の右辺に指定した行番号の後に
コピー (つまり転送) します。コピー先の行番号としては、
\fI`0'\fP (ゼロ) の指定が許されています。
現在行番号は、コピーした一番最後の行の行番号に設定されます。

.TP  8
u
最後に実行したコマンドの実行結果を取り消し、現在行番号を、取り消したい
コマンドが実行される前のものに戻します。グローバルコマンドである
\fI`g'\fP, \fI`G'\fP, \fI`v'\fP, \fI`V'\fP については、その改変は 1 コマンドで
行なわれたとして扱います。\fI`u'\fP は自分自身の動作を取り消すことも
できます。

.TP  8
(1,$)v\fI/re/command\-list\fP
指定した範囲の行のうち、指定した正規表現 \fIre\fP と一致する文字列が含まれ
ていない行について、 \fIcommand\-list\fP で指定したコマンドを実行します。
これは \fI`g'\fP コマンドに動作が似ています。

.TP  8
(1,$)V\fI/re/\fP
指定した範囲の行のうち、指定した正規表現 \fIre\fP に一致する文字列が
含まれていない行について、対話編集を行ないます。これは \fI`G'\fP コマンド
に動作が似ています。

.TP  8
(1,$)w\fI\ file\fP
指定した範囲の行を、 \fIfile\fP で指定したファイルに書き出します。それまで
\fIfile\fP に格納されていた内容は、警告なしに消去されます。デフォルトファ
イル名が設定されていない場合、デフォルトファイル名は \fIfile\fP に設定され
ます。それ以外の場合では、デフォルトファイル名は変更されません。ファイ
ル名が指定されなかった場合には、デフォルトファイル名が使用されます。
現在行番号は変更されません。

.TP  8
(1,$)wq\fI\ file\fP
指定した範囲の行を \fIfile\fP で指定したファイルに書き出し、
\fI`q'\fP コマンドを実行します。

.TP  8
(1,$)w !\fIcommand\fP
指定した範囲の行の内容を \fI!command\fP の標準入力に書き出します
(\fI`!command'\fP については、以下の説明を参照して下さい)。
デフォルトファイル名および現在行番号は変更されません。

.TP  8
(1,$)W\fI\ file\fP
指定した範囲の行の内容を \fIfile\fP で指定したファイルの後ろに追加書き込み
します。 \fI`w'\fP コマンドと似ていますが、指定したファイルにそれまで格納
されていた内容がなくなることはありません。現在行番号は変更されません。

.TP  8
(.)x
カットバッファの内容を指定された行の後ろにコピー (挿入) します。
現在行番号は最後にコピーが行われた行になります。

.TP  8
(.,.)y
指定した範囲の行の内容をカットバッファにコピー (yank) します。
カットバッファの内容は、これ以降にコマンド \fI`y'\fP, \fI`s'\fP, \fI`j'\fP,
\fI`d'\fP, \fI`c'\fP を実行すると上書きされます。
現在行番号は変更されません。

.TP  8
(.+1)z\fIn\fP
指定した行から一度に \fIn\fP 行だけスクロールします。 \fIn\fP が指定されない
場合には、現在のウィンドウサイズだけスクロールします。現在行番号は、
最後に表示した行の行番号に設定されます。

.TP  8
!\fIcommand\fP
\fIcommand\fP で指定したコマンドを、 \fBsh\fP(1) を用いて実行します。
\fIcommand\fP の最初の文字が `!'の場合には、その文字は直前に \fI!command\fP
で実行したコマンド文字列が格納されます。 \fIcommand\fP 文字列をバックスラッ
シュ (\e) でエスケープした場合には、\fBed\fP は処理を行ないません。しかし、
エスケープされない \fI`%'\fP 文字があった場合には、その文字列はデフォルト
ファイル名に置き換えられます。シェルがコマンド実行から戻ってきた場合に
は、`!' が標準出力に出力されます。現在行番号は変更されません。

.TP  8
(.,.)#
コメントを開始します。改行までの残りの行は無視されます。
行番号とその直後にセミコロンを指定した場合、
現在行番号は指定された行番号に設定されます。
それ以外の場合、現在行番号は変更されません。

.TP  8
($)=
指定された行の行番号を表示します。

.TP  8
(.+1)newline
指定した行を表示します。そして、現在行番号を表示した行のものに
設定します。

.SH ファイル
.TP  8
ed.hup
端末が回線切断した場合に、 \fBed\fP がバッファ内容を書き出すファイル。

.SH 関連項目

\fIvi\fP(1), \fIsed\fP(1), \fIregex\fP(3), \fIsh\fP(1).

USD:12\-13

B. W. Kernighan and P. J. Plauger, \fISoftware Tools in Pascal ,\fP
Addison\-Wesley, 1981.

.SH 制限
\fBed\fP は \fIfile\fP 引数に対してバックスラッシュエスケープ処理を施します。
つまり、ファイル名中でバックスラッシュ (\e) を前につけた文字は、
リテラルとして解釈されます。

(バイナリではない) テキストファイルの最後が改行文字で終っていない場合、
\fBed\fP はそれを読み書きする際に改行文字を追加します。バイナリファイルの
場合は、 \fBed\fP はこのような改行文字追加は行いません。

1 行あたりのオーバヘッドは、ポインタ 2 つ、long int 1 つ、 int 1 つです。

.SH 診断
エラーが発生すると、 \fBed\fP は `?' を表示し、コマンドモードに戻るか、
スクリプトによる実行のエラーの場合にはプログラムを終了します。最後の
エラーメッセージについての説明は、\fI`h'\fP (help) コマンドを用いることで
表示可能です。

変更されたバッファ内のデータを書き出さずに、\fBed\fP を終了しようとしたり、
他のファイルを編集しようとしたりすると、エラーになります。その場合でも、
同一のコマンドを 2 回入力すると、コマンドは成功します。しかし、それまで
の未保存の編集結果は、すべて失われます。

\fBed\fP はエラーが発生しなかった場合 0 で終了します。
それ以外の場合は >0 で終了します。
