.de  xx
.in \\n(INu+\\$1
.ti -\\$1
..
.\" Copyright (C), 1995, Graeme W. Wilford. (Wilf.)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Wed Jun 14 16:10:28 BST 1995 Wilf. (G.Wilford@ee.surrey.ac.uk)
.\" Tiny change in formatting - aeb, 950812
.\" Modified 8 May 1998 by Joseph S. Myers (jsm28@cam.ac.uk)
.\"
.\" show the synopsis section nicely
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH REGEX 3 2011\-09\-27 GNU "Linux Programmer's Manual"
.SH 名前
regcomp, regexec, regerror, regfree \- POSIX regex 関数
.SH 書式
.nf
\fB#include <sys/types.h>\fP
\fB#include <regex.h>\fP

\fBint regcomp(regex_t *\fP\fIpreg\fP\fB, const char *\fP\fIregex\fP\fB, int \fP\fIcflags\fP\fB);\fP

\fBint regexec(const regex_t *\fP\fIpreg\fP\fB, const char *\fP\fIstring\fP\fB, size_t \fP\fInmatch\fP\fB,\fP
\fB            regmatch_t \fP\fIpmatch[]\fP\fB, int \fP\fIeflags\fP\fB);\fP

\fBsize_t regerror(int \fP\fIerrcode\fP\fB, const regex_t *\fP\fIpreg\fP\fB, char *\fP\fIerrbuf\fP\fB,\fP
\fB                size_t \fP\fIerrbuf_size\fP\fB);\fP

\fBvoid regfree(regex_t *\fP\fIpreg\fP\fB);\fP
.fi
.SH 説明
.SS "POSIX regex コンパイル"
\fBregcomp\fP()  は、正規表現をコンパイルして、 \fBregexec\fP()  での検索処理に適合する形態にする。

\fBregcomp\fP()  はパターンを記憶するバッファへのポインタ \fIpreg\fP、 ヌル文字で終端された文字列 \fIregex\fP、
そしてコンパイルの形式を決めるためのフラグ \fIcflag\fP を引数に伴う。

全ての正規表現検索は、コンパイルされたパターンによって行わなければならない。 よって、 \fBregexec\fP()  に指定するのは、必ず
(\fBregcomp\fP()  によってコンパイルされた) パターンバッファへのアドレスでなければならない。

\fIcflags\fP には以下に示す定数一つ以上のビットごとの OR (bitwise\-or) を指定する。
.TP 
\fBREG_EXTENDED\fP
\fIregex\fP に \fBPOSIX\fP 拡張正規表現を使用する。もしこのフラグが設定されない場合、 \fBPOSIX\fP 標準正規表現が使われる。
.TP 
\fBREG_ICASE\fP
大文字小文字の違いを無視する。このフラグを指定してコンパイルされた パターンバッファを用いて \fBregexec\fP()
関数を呼び出すと、大文字小文字の区別を付けずに検索が行われる。
.TP 
\fBREG_NOSUB\fP
このフラグを設定してコンパイルされたパターンバッファが \fBregexec\fP()  の引数に指定されると、引き数 \fInmatch\fP,
\fIpmatch\fP が無視される。
.TP 
\fBREG_NEWLINE\fP
全ての文字にマッチするオペレータに改行をマッチさせない。

改行を含まない非マッチング文字リスト (\fB[^...]\fP)  に改行をマッチさせない。

\fBregexec\fP()  の実行時に指定するフラグ \fIeflags\fP に \fBREG_NOTBOL\fP
を含むかどうかにかかわらず、行頭にマッチするオペレータ (\fB^\fP)  を改行直後の空文字列にマッチさせる。

\fIeflags\fP に \fBREG_NOTEOL\fP を含むかどうかにかかわらず、行末にマッチするオペレータ (\fB$\fP)
を改行直前の空文字列にマッチさせる。
.SS "POSIX regex マッチング"
\fBregexec\fP()  は、 プリコンパイルされたパターンバッファ \fIpreg\fP をヌル文字で終端された文字列にマッチさせる。 \fInmatch\fP
と \fIpmatch\fP はマッチングの位置に関する情報を取得するのに用いられる。 \fIeflags\fP には \fBREG_NOTBOL\fP と
\fBREG_NOTEOL\fP のどちらか、もしくは両方のビットごとの \fBOR\fP (bitwise\-\fBor\fP)
を指定し、以下で説明するようにマッチング動作を変化させる。
.TP 
\fBREG_NOTBOL\fP
行頭にマッチするオペレータは、必ずマッチに失敗する (コンパイル時のフラグ \fBREG_NEWLINE\fP の項目も参照)。
このフラグは、複数行にまたがる文字列を \fBregexec\fP()  で検索する際に、文字列の先頭を行の先頭として解釈させない場合に用いる。
.TP 
\fBREG_NOTEOL\fP
行末にマッチするオペレータは、必ずマッチに失敗する (コンパイル時のフラグ \fBREG_NEWLINE\fP の項目も参照)。
.SS バイトオフセット
パターンバッファのコンパイル時に \fBREG_NOSUB\fP が設定されない場合は、部分文字列のマッチング位置情報を得ることができる。 \fIpmatch\fP
は、少なくとも \fInmatch\fP の大きさを持つように指定しなければならない。 \fBregexec\fP()
の実行によって、それらに部分文字列マッチング位置情報が代入される。 未使用の構造体要素には \-1 が値として代入される。

\fIpmatch\fP の型である \fIregmatch_t\fP 構造体は、 \fI<regex.h>\fP 内で定義される。

.in +4n
.nf
typedef struct {
    regoff_t rm_so;
    regoff_t rm_eo;
} regmatch_t;
.fi
.in

構造体要素 \fIrm_so\fP の値が \-1 でない場合、それは文字列内での次の最大のマッチング部分の開始 オフセット位置を示す。それに対し、構造体要素
\fIrm_eo\fP はマッチング部分の終了オフセット位置を示し、 マッチング部分の直後の文字のオフセット位置が使用される。
.SS "POSIX エラーレポート"
\fBregerror\fP()  は、 \fBregcomp\fP()  と \fBregexec\fP()
の実行によって得られるエラーコードから、エラーメッセージ文字列を 得るのに用いられる。

\fBregerror\fP()  はエラーコード \fIerrcode\fP、 パターンバッファ \fIpreg\fP、 文字列バッファへのポインタ
\fIerrbuf\fP、 文字列バッファのサイズ \fIerrbuf_size\fP を引数にとる。
この関数は、ヌル文字で終端されたエラーメッセージ文字列を格納するのに必要な \fIerrbuf\fP のサイズを返す。もし \fIerrbuf\fP と
\fIerrbuf_size\fP の両方が非 0 値であれば、 \fIerrbuf\fP には最初の \fIerrbuf_size \- 1\fP
文字分にエラーメッセージと終端の NULL バイト (\(aq\e0\(aq)  が収まるように代入される。
.SS "POSIX パターンバッファ解放"
引数にコンパイルされたパターンバッファ \fIpreg\fP を与えて \fBregfree\fP()  を呼び出すと、 \fBregcomp\fP()
によるコンパイル時にパターンバッファに割り当てられたメモリが解放される。
.SH 返り値
\fBregcomp\fP()  は、コンパイルの成功時には 0 を返し、失敗時にはエラーコードを返す。

\fBregexec\fP()  は、マッチングの成功時には 0 を返し、失敗時には \fBREG_NOMATCH\fP を返す。
.SH エラー
\fBregcomp\fP()  は以下のエラーを返す。
.TP 
\fBREG_BADBR\fP
無効な後方参照オペレータの使用。
.TP 
\fBREG_BADPAT\fP
グループやリストなどの、パターンオペレータの無効な使用。
.TP 
\fBREG_BADRPT\fP
\(aq*\(aq が最初の文字としてくるような、無効な繰り返しオペレータの使用。
.TP 
\fBREG_EBRACE\fP
インターバルオペレータ \fB{}\fP (brace interval operators) が閉じていない。
.TP 
\fBREG_EBRACK\fP
リストオペレータ \fB[]\fP (bracket list operators) が閉じていない。
.TP 
\fBREG_ECOLLATE\fP
照合順序の要素 (collating element) として有効ではない。 (訳注) 詳細は \fBregex\fP(7)  を参照。
.TP 
\fBREG_ECTYPE\fP
未知のキャラクタクラス名。
.TP 
\fBREG_EEND\fP
未定義エラー。これは POSIX.2 には定義されていない。
.TP 
\fBREG_EESCAPE\fP
正規表現がバックスラッシュで終っている。
.TP 
\fBREG_EPAREN\fP
グループオペレータ \fB()\fP (parenthesis group operators) が閉じていない。
.TP 
\fBREG_ERANGE\fP
無効な範囲オペレータの使用。 例えば、範囲の終了位置が開始位置よりも前にあるような場合。
.TP 
\fBREG_ESIZE\fP
正規表現のコンパイルに、64Kb 以上のパターンバッファが必要。 これは POSIX.2 には定義されていない。
.TP 
\fBREG_ESPACE\fP
regex ルーチンがメモリを使いはたしている。
.TP 
\fBREG_ESUBREG\fP
サブエクスプレッション \e\fB(...\e\fP)  (subexpression) への無効な後方参照。
.SH 準拠
POSIX.1\-2001.
.SH 関連項目
\fBgrep\fP(1), \fBregex\fP(7), GNU regex マニュアル
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
