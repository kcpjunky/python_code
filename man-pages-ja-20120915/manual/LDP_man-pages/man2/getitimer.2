.\" Copyright 7/93 by Darren Senn <sinster@scintilla.santa-clara.ca.us>
.\" Based on a similar page Copyright 1992 by Rick Faith
.\" May be freely distributed
.\" Modified Tue Oct 22 00:22:35 EDT 1996 by Eric S. Raymond <esr@thyrsus.com>
.\" 2005-04-06 mtk, Matthias Lang <matthias@corelatus.se>
.\" 	Noted MAX_SEC_IN_JIFFIES ceiling
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH GETITIMER 2 2009\-03\-15 Linux "Linux Programmer's Manual"
.SH 名前
getitimer, setitimer \- インターバル・タイマーの値を取得または設定する
.SH 書式
.nf
\fB#include <sys/time.h>\fP
.sp
\fBint getitimer(int \fP\fIwhich\fP\fB, struct itimerval *\fP\fIcurr_value\fP\fB);\fP
.br
\fBint setitimer(int \fP\fIwhich\fP\fB, const struct itimerval *\fP\fInew_value\fP\fB,\fP
\fB              struct itimerval *\fP\fIold_value\fP\fB);\fP
.fi
.SH 説明
システムは 1 個のプロセスにつき 3 個のインターバル・タイマーを提供する。 それぞれのタイマーは別々の時間領域で減少する。
どのタイマーも満了するとプロセスにシグナルが送られ、 タイマーは (設定によっては) 再び開始される。
.TP  1.5i
\fBITIMER_REAL\fP
実時間 (real time) で減少し、満了すると \fBSIGALRM\fP が送られる。
.TP 
\fBITIMER_VIRTUAL\fP
プロセスが実行されている間のみ減少し、満了すると \fBSIGVTALRM\fP が送られる。
.TP 
\fBITIMER_PROF\fP
プロセスが実行されていて、 かつシステムがそのプロセスのために処理を行なっている間に減少する。 多くの場合、このタイマーは
\fBITIMER_VIRTUAL\fP と組み合わされて、アプリケーションがカーネル空間とユーザー空間で
どれだけの時間を過ごしたかをプロファイルするのに使用される。 満了すると \fBSIGPROF\fP が送られる。
.LP
タイマーの値は以下の構造体によって定義される:
.PD 0
.in +4n
.nf

struct itimerval {
    struct timeval it_interval; /* next value */
    struct timeval it_value;    /* current value */
};

struct timeval {
    long tv_sec;                /* seconds */
    long tv_usec;               /* microseconds */
};
.fi
.in
.PD
.LP
\fBgetitimer\fP()  関数は、 \fIwhich\fP で指定されたタイマー (\fBITIMER_REAL\fP, \fBITIMER_VIRTUAL\fP,
\fBITIMER_PROF\fP のどれか) の現在の設定を、 \fIcurr_value\fP で指定された構造体に格納する。 \fIit_value\fP
要素にはタイマーの残り時間が設定される。タイマーがオフの場合は ゼロが設定される。同様に \fIit_interval\fP には初期値が設定される。

\fBsetitimer\fP()  関数は指定されたタイマーに \fInew_value\fP の値を設定する。 \fIold_value\fP が NULL
以外の場合、タイマーの古い値が \fIold_value\fP に格納される。
.LP
タイマーは \fIit_value\fP からゼロへ向けて減っていき、シグナルを生成し、 \fIit_interval\fP に初期化される。
タイマーがゼロに設定された場合 (\fIit_value\fP がゼロか、タイマーが満了した時に \fIit_interval\fP がゼロの場合) は停止する。
.LP
タイマーの期間は \fItv_sec\fP と \fItv_usec\fP の両方により決定される。
.LP
要求した時間がくる前にタイマーが満了することはないが、 逆にある (短い) 時間だけ満了が遅れることはある。
どれだけ遅れるかはシステムの時間分解能とシステムの負荷に依存する (\fBtime\fP(7)  参照; 但し、バグの項も参照のこと)。
タイマーが満了するとシグナルが生成され、タイマーは初期化される。 プロセスがアクティブな時 (\fBITIMER_VIRTUAL\fP
の場合には常にそうである) にタイマーが満了した場合、生成されたシグナルは すぐに配送される。それ以外の場合は、システムの負荷により少しの時間だけ
遅れて配送される。
.SH 返り値
成功した場合、0 が返される。エラーが発生した場合、\-1 が返され、 \fIerrno\fP が適切に設定される。
.SH エラー
.TP 
\fBEFAULT\fP
\fInew_value\fP, \fIold_value\fP, \fIcurr_value\fP が有効なポインタではない。
.TP 
\fBEINVAL\fP
\fIwhich\fP が \fBITIMER_REAL\fP, \fBITIMER_VIRTUAL\fP, \fBITIMER_PROF\fP のどれでもない。 または
(Linux 2.6.22 以降で)  \fInew_value\fP で指定された構造体の \fItv_usec\fP フィールドの一つが 0 以上 999999
以下の範囲に入らない値である。
.SH 準拠
POSIX.1\-2001, SVr4, 4.4BSD (このコールは 4.2BSD で始めて現われた).  POSIX.1\-2008 では、
\fBgetitimer\fP()  と \fBsetitimer\fP()  は廃止予定とされており、 代わりに POSIX タイマー API
(\fBtimer_gettime\fP(2), \fBtimer_settime\fP(2)  など) を使うことが推奨されている。
.SH 注意
\fBfork\fP(2)  で作成された子プロセスは、 親プロセスのインターバル・タイマーを継承しない。 \fBexecve\fP(2)
の前後ではインターバル・タイマーは保存される。

POSIX.1 では、 \fBsetitimer\fP()  と、 \fBalarm\fP(2), \fBsleep\fP(3), \fBusleep\fP(3)  という 3
つのインタフェースとの相互の影響については規定していない。
.SH バグ
シグナルの生成と配送は別個のものであり、 前述のシグナルのそれぞれについて一つだけがプロセスのために 待機する。 非常に重い負荷の下では、
\fBITIMER_REAL\fP タイマーでは、時間切れにより生成された一つ前のシグナルが配送される前に、 次の時間切れが起こる場合がある。
そのような場合、 2 個めのイベントに対するシグナルは失われてしまう。

バージョン 2.6.16 より前の Linux カーネルでは、 タイマーの値は jiffy で表現される。 要求が jiffy 表現で
(\fIinclude/linux/jiffies.h\fP で定義されている)  \fBMAX_SEC_IN_JIFFIES\fP
を越える値をタイマーに設定しようとするものの場合、 タイマーは暗黙にこの上限値に切り詰められる。 Linux/i386 の場合 (Linux
2.6.13 以降では jiffy は 0.004 秒) の場合、 これはタイマーの上限値がおよそ 99.42 日になることを意味する。 Linux
2.6.16 以降では、カーネルは時間に関する内部表現として 異なる表現を使うようになっており、この上限はなくなった。

.\" 4 Jul 2005: It looks like this bug may remain in 2.4.x.
.\"	http://lkml.org/lkml/2005/7/1/165
(i386 を含む) いくつかのシステムでは、 バージョン 2.6.12 以前の Linux カーネルは ある種の状況では 1 jiffy
早くタイマーが終了してしまうというバグがあった。 このバグはカーネル 2.6.12 で修正された。

.\" Bugzilla report 25 Apr 2006:
.\" http://bugzilla.kernel.org/show_bug.cgi?id=6443
.\" "setitimer() should reject noncanonical arguments"
POSIX.1\-2001 では \fBsetitimer\fP()  は \fItv_usec\fP の値が 0 から 999999
の範囲外である場合には失敗するべきだとしている。 しかし、2.6.21 以前のカーネルの Linux ではエラーにならず、
対応する秒数の分だけそのタイマーの秒の値が暗黙に調整される。 カーネル 2.6.22 以降では、この標準非準拠の動作は修正され、 \fItv_usec\fP
の値が不適切な場合には \fBEINVAL\fP エラーとなる。
.SH 関連項目
\fBgettimeofday\fP(2), \fBsigaction\fP(2), \fBsignal\fP(2), \fBtimer_create\fP(2),
\fBtimerfd_create\fP(2), \fBtime\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
