.\" Copyright (C) 2001 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH STDIO_EXT 3 2001\-12\-16 "" "Linux Programmer's Manual"
.SH 名前
__fbufsize, __flbf, __fpending, __fpurge, __freadable, __freading,
__fsetlocking, __fwritable, __fwriting, _flushlbf \- 標準入出力ファイル構造体へのインタフェース
.SH 書式
\fB#include <stdio.h>\fP
.br
\fB#include <stdio_ext.h>\fP
.sp
\fBsize_t __fbufsize(FILE *\fP\fIstream\fP\fB);\fP
.br
\fBsize_t __fpending(FILE *\fP\fIstream\fP\fB);\fP
.br
\fBint __flbf(FILE *\fP\fIstream\fP\fB);\fP
.br
\fBint __freadable(FILE *\fP\fIstream\fP\fB);\fP
.br
\fBint __fwritable(FILE *\fP\fIstream\fP\fB);\fP
.br
\fBint __freading(FILE *\fP\fIstream\fP\fB);\fP
.br
\fBint __fwriting(FILE *\fP\fIstream\fP\fB);\fP
.br
\fBint __fsetlocking(FILE *\fP\fIstream\fP\fB, int \fP\fItype\fP\fB);\fP
.br
\fBvoid _flushlbf(void);\fP
.br
\fBvoid __fpurge(FILE *\fP\fIstream\fP\fB);\fP
.SH 説明
Solaris では、 \fIFILE\fP 構造体の内部へポータブルなかたちで アクセスできる手段が導入されており、これらは glibc
でも実装されている。
.LP
\fB__fbufsize\fP()  関数は、指定されたストリームが使用しているバッファサイズを返す。
.LP
\fB__fpending\fP()  関数は、出力バッファに入っているデータのバイト数を返す。
ワイドキャラクタを扱うストリームの場合、ワイドキャラクタ単位で計算される。 バッファが読み出しモードの場合や読み出し専用で開かれている場合の
この関数の振舞いは未定義である。
.LP
\fB__flbf\fP()  関数は、ストリームがラインバッファの場合は 0 以外を、 それ以外の場合は 0 を返す。
.LP
\fB__freadable\fP()  関数は、ストリームが読み出し可能な場合は 0 以外を、 それ以外の場合は 0 を返す。
.LP
\fB__fwritable\fP()  関数は、ストリームが書き込み可能な場合は 0 以外を、 それ以外の場合は 0 を返す。
.LP
\fB__freading\fP()  関数は、ストリームが読み出し専用の場合、またはストリームに対する直前の操作が 読み出し操作であった場合は 0
以外を返し、それ以外の場合は 0 を返す。
.LP
\fB__fwriting\fP()  関数は、ストリームが書き込み専用(もしくは追加専用)の場合、
またはストリームに対する直前の操作が書き込み操作であった場合は 0 以外を返し、 それ以外の場合は 0 を返す。
.LP
\fB__fsetlocking\fP()  関数は、ストリームのロック形式を選択するために使用できる。 返り値は、現在のロック形式である。 \fItype\fP
引き数は以下の 3 種類の値をとることができる :
.TP 
\fBFSETLOCKING_INTERNAL\fP
指定されたストリームに対して操作が行われる度に、操作の前後で 明示的に指示しなくてもストリームのロック処理を行う (但し、*_unlocked
関数を使用した場合は例外である)。 これがデフォルトのロック形式である。
.TP 
\fBFSETLOCKING_BYCALLER\fP
関数の呼び出し元でロックの面倒をみる。 (おそらく、複数のスレッドが存在する状況では \fBflockfile\fP(3)  を使うことになるだろう)
ロック形式が \fBFSETLOCKING_INTERNAL\fP にリセットされるまでは標準入出力関連の関数はロック処理を行わない。
.TP 
\fBFSETLOCKING_QUERY\fP
ロック形式の変更を行わない。(現在の形式を返すだけである)
.LP
\fB_flushlbf\fP()  関数は、すべてのラインバッファ (line\-buffered) タイプのストリームの 内容を出力(フラッシュ)する。
(当然ながら、端末への出力が強制的に行われることになるので、 キーボードからの入力を読みこむ前にこの関数を呼んだ方がいいだろう)
.LP
\fB__fpurge\fP()  関数は、ストリームのバッファの内容を廃棄する。
.SH 関連項目
\fBflockfile\fP(3), \fBfpurge\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
