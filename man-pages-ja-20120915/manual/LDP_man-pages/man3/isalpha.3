.\" Copyright (c) 1993 by Thomas Koenig (ig25@rz.uni-karlsruhe.de)
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\" License.
.\"
.\" Modified Sat Jul 24 19:10:00 1993 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sun Aug 21 17:51:50 1994 by Rik Faith (faith@cs.unc.edu)
.\" Modified Sat Sep  2 21:52:01 1995 by Jim Van Zandt <jrv@vanzandt.mv.com>
.\" Modified Mon May 27 22:55:26 1996 by Martin Schulze (joey@linux.de)
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH ISALPHA 3 2010\-09\-20 GNU "Linux Programmer's Manual"
.SH 名前
isalnum, isalpha, isascii, isblank, iscntrl, isdigit, isgraph, islower,
isprint, ispunct, isspace, isupper, isxdigit \- 文字を分類する
.SH 書式
.nf
\fB#include <ctype.h>\fP
.sp
\fBint isalnum(int \fP\fIc\fP\fB);\fP
.br
\fBint isalpha(int \fP\fIc\fP\fB);\fP
.br
\fBint isascii(int \fP\fIc\fP\fB);\fP
.br
\fBint isblank(int \fP\fIc\fP\fB);\fP
.br
\fBint iscntrl(int \fP\fIc\fP\fB);\fP
.br
\fBint isdigit(int \fP\fIc\fP\fB);\fP
.br
\fBint isgraph(int \fP\fIc\fP\fB);\fP
.br
\fBint islower(int \fP\fIc\fP\fB);\fP
.br
\fBint isprint(int \fP\fIc\fP\fB);\fP
.br
\fBint ispunct(int \fP\fIc\fP\fB);\fP
.br
\fBint isspace(int \fP\fIc\fP\fB);\fP
.br
\fBint isupper(int \fP\fIc\fP\fB);\fP
.br
\fBint isxdigit(int \fP\fIc\fP\fB);\fP
.fi
.sp
.in -4n
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.in
.sp
.ad l
\fBisascii\fP():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE
.br
.RE
\fBisblank\fP():
.RS 4
_XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE || _POSIX_C_SOURCE\ >=\ 200112L;
.br
or \fIcc\ \-std=c99\fP
.RE
.ad
.SH 説明
これらの関数は、現在のロケールに従って \fIc\fP を分類する。 \fIc\fP は \fIunsigned char\fP か \fBEOF\fP でなければならない。
.TP 
\fBisalnum\fP()
英字または数字であるかを調べる。 \fB(isalpha(\fP\fIc\fP\fB) || isdigit(\fP\fIc\fP\fB))\fP と等価である。
.TP 
\fBisalpha\fP()
アルファベットかどうか調べる。標準の \fB"C"\fP ロケールでは \fB(isupper(\fP\fIc\fP\fB) || islower(\fP\fIc\fP\fB))\fP
と等価である。他のロケールでは、大文字でも小文字でもない他の文字でも \fBisalpha\fP()  が true を返すことがある。
.TP 
\fBisascii\fP()
\fIc\fP が、ASCII文字セットに合致する 7ビットの \fIunsigned char\fP であるかを調べる。
.TP 
\fBisblank\fP()
空白文字 (スペースかタブ) であるかを調べる。
.TP 
\fBiscntrl\fP()
制御文字かどうかを調べる。
.TP 
\fBisdigit\fP()
数字 (0〜9) かどうかを調べる。
.TP 
\fBisgraph\fP()
表示可能な文字かどうかを調べる。スペースは含まれない。
.TP 
\fBislower\fP()
小文字かどうかを調べる。
.TP 
\fBisprint\fP()
表示可能な文字かどうかを調べる。スペースも含まれる。
.TP 
\fBispunct\fP()
表示可能な文字かどうかを調べる。スペースと英数字は含まれない。
.TP 
\fBisspace\fP()
空白文字かどうかを調べる。 \fB"C"\fP ロケールか \fB"POSIX"\fP ロケールでは、空白文字とは、スペース、フォームフィード
(\fB\(aq\ef\(aq\fP)  、改行(newline)  (\fB\(aq\en\(aq\fP)  、復帰(carriage return)
(\fB\(aq\er\(aq\fP)  、水平タブ (\fB\(aq\et\(aq\fP)  、垂直タブ (\fB\(aq\ev\(aq\fP)  である。
.TP 
\fBisupper\fP()
大文字かどうかを調べる。
.TP 
\fBisxdigit\fP()
16進数での数字かどうかを調べる。
.br
\fB0 1 2 3 4 5 6 7 8 9 a b c d e f A B C D E F\fP の文字であるかどうかを調べることと等価である。
.SH 返り値
文字 \fIc\fP が調べた文字の種類に合っていれば 0 以外を返す。 そうでなければ 0 を返す。
.SH 準拠
C99, 4.3BSD.  C89 では、これらの関数のうち \fBisascii\fP()  と \fBisblank\fP()  以外の
すべてが規定されている。 \fBisascii\fP()  は BSD や SVr4 の拡張である。 \fBisblank\fP()  は POSIX.1\-2001
と C99 7.4.1.3 に準拠している。 POSIX.1\-2008 は、 \fBisascii\fP()  を廃止予定としている。
ローカライズされたアプリケーションでは、移植性を確保しつつ、 この関数を使用することはできない点に注意すること。
.SH 注意
ある文字がどの種類に入るかということは、現在のロケールに依存する。 たとえば、デフォルトの \fBC\fP ロケールでは \fBisupper\fP()  は A
のウムラウトを認識できないので、それが大文字だということがわからない。
.SH 関連項目
\fBiswalnum\fP(3), \fBiswalpha\fP(3), \fBiswblank\fP(3), \fBiswcntrl\fP(3),
\fBiswdigit\fP(3), \fBiswgraph\fP(3), \fBiswlower\fP(3), \fBiswprint\fP(3),
\fBiswpunct\fP(3), \fBiswspace\fP(3), \fBiswupper\fP(3), \fBiswxdigit\fP(3),
\fBsetlocale\fP(3), \fBtoascii\fP(3), \fBtolower\fP(3), \fBtoupper\fP(3), \fBascii\fP(7),
\fBlocale\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
