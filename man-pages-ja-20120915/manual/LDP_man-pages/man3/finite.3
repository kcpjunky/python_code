.\" Copyright 2004 Andries Brouwer <aeb@cwi.nl>.
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH FINITE 3 2008\-08\-05 "" "Linux Programmer's Manual"
.SH 名前
finite, finitef, finitel, isinf, isinff, isinfl, isnan, isnanf, isnanl \- BSD
の浮動小数点分類関数
.SH 書式
.nf
\fB#include <math.h>\fP
.sp
\fBint finite(double \fP\fIx\fP\fB);\fP
.br
\fBint finitef(float \fP\fIx\fP\fB);\fP
.br
\fBint finitel(long double \fP\fIx\fP\fB);\fP
.sp
\fBint isinf(double \fP\fIx\fP\fB);\fP
.br
\fBint isinff(float \fP\fIx\fP\fB);\fP
.br
\fBint isinfl(long double \fP\fIx\fP\fB);\fP
.sp
\fBint isnan(double \fP\fIx\fP\fB);\fP
.br
\fBint isnanf(float \fP\fIx\fP\fB);\fP
.br
\fBint isnanl(long double \fP\fIx\fP\fB);\fP
.fi
.sp
.in -4n
glibc 向けの機能検査マクロの要件 (\fBfeature_test_macros\fP(7)  参照):
.in
.sp
.ad l
\fBfinite\fP(), \fBfinitef\fP(), \fBfinitel\fP():
.RS 4
_BSD_SOURCE || _SVID_SOURCE
.RE
\fBisinf\fP():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600 || _ISOC99_SOURCE;
.br
or \fIcc\ \-std=c99\fP
.RE
.br
\fBisinff\fP(), \fBisinfl\fP():
.RS 4
_BSD_SOURCE || _SVID_SOURCE
.RE
\fBisnan\fP():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE || _ISOC99_SOURCE;
.br
or \fIcc\ \-std=c99\fP
.RE
\fBisnanf\fP(), \fBisnanl\fP():
.RS 4
_BSD_SOURCE || _SVID_SOURCE || _XOPEN_SOURCE\ >=\ 600
.RE
.ad b
.SH 説明
\fBfinite\fP()  関数は、 \fIx\fP が無限大や無効値 (NaN) のいずれでもない 場合に 0 以外の値を返し、それ以外の場合は 0 を返す。

\fBisnan\fP()  関数は、 \fIx\fP が NaN の場合 0 以外の値を返し、 それ以外の場合は 0 を返す。

\fBisinf\fP()  関数は、 \fIx\fP が正の無限大であれば 1 を返し、\fIx\fP が負の無限大で あれば \-1 を返す。それ以外の場合は 0
を返す。
.SH 注意
.\"
.\" finite* not on HP-UX; they exist on Tru64.
.\" .SH HISTORY
.\" The
.\" .BR finite ()
.\" function occurs in 4.3BSD.
.\" see IEEE.3 in the 4.3BSD manual
これらの関数は廃止された点に注意すること。 C99 では、これらの置き換えとして (どんな型にも適用できる)  \fBisfinite\fP(),
\fBisinf\fP(), \fBisnan\fP()  というマクロが定義されている。 さらに C99 の \fBisinf\fP()
は返り値に関して弱い意味での保証しかないことにも 注意すること。詳細は \fBfpclassify\fP(3)  を参照。
.SH 関連項目
\fBfpclassify\fP(3)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
