.\" Copyright (C) 1995, Thomas K. Dyas <tdyas@eden.rutgers.edu>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\"
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\"
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" Created   1995-08-06 Thomas K. Dyas <tdyas@eden.rutgers.edu>
.\" Modified  2000-07-01 aeb
.\" Modified  2002-07-23 aeb
.\" Modified, 27 May 2004, Michael Kerrisk <mtk.manpages@gmail.com>
.\"     Added notes on capability requirements
.\"
.\"*******************************************************************
.\"
.\" This file was generated with po4a. Translate the source file.
.\"
.\"*******************************************************************
.TH SETFSUID 2 2010\-11\-22 Linux "Linux Programmer's Manual"
.SH 名前
setfsuid \- ファイルシステムのチェックに用いられるユーザ ID を設定する
.SH 書式
\fB#include <unistd.h>\fP /* glibc では <sys/fsuid.h> */
.sp
\fBint setfsuid(uid_t \fP\fIfsuid\fP\fB);\fP
.SH 説明
\fBsetfsuid\fP()  は Linux カーネルがファイルシステムに対する 全てのアクセスのチェックに使用するユーザID を設定する。通常は
\fIfsuid\fP の値は実効 (effective) ユーザID と同じになる。実際、 実効ユーザID が変更される度に \fIfsuid\fP
もまた新しい実効ユーザID の値に変更される。

通常、 \fBsetfsuid\fP()  や \fBsetfsgid\fP()  が明示的に呼び出されるのは、Linux NFS サーバー のように、
ファイルアクセスに用いるユーザID / グループID を変更しなければならないが、 対応する実(real)/実効(effective) ユーザID /
グループID は変更したくないような プログラムに限られる。 NFS サーバーのようなプログラムで、通常のユーザID を変更すると、
プロセスを望まないシグナルにさらす可能性があり、 セキュリティホールになる。(下記参照)

\fBsetfsuid\fP()  は、スーパーユーザによって呼び出された場合か、 \fIfsuid\fP が実ユーザID、実効ユーザID、 保存セットユーザID
(saved set\-user\-ID)、現在の \fIfsuid\fP の値のいずれかに一致する場合にのみ成功する。
.SH 返り値
成功した場合、 \fIfsuid\fP の以前の値を返す。エラーの場合は \fIfsuid\fP の現在の値を返す。
.SH バージョン
.\" This system call is present since Linux 1.1.44
.\" and in libc since libc 4.7.6.
このシステムコールはバージョン 1.2 以降の Linux に存在する。
.SH 準拠
\fBsetfsuid\fP()  は Linux 特有であり、移植を想定したプログラムで使用してはいけない。
.SH 注意
glibc が引き数がユーザID として不正だと判断した場合は、 システムコールを行わず \fIerrno\fP に \fBEINVAL\fP を設定して \-1
が返される。
.LP
このシステムコールが導入された当時、プロセスは 同じ実効ユーザIDのプロセスへシグナルを送ることができた。
今日では、シグナル送信権限の扱いはかなり違うものになっている。

元々の Linux の \fBsetfsuid\fP() システムコールは
16 ビットのグループ ID だけに対応していた。
その後、Linux 2.4 で、32 ビットの ID に対応した
\fBsetfsuid32\fP() が追加された。
glibc の \fBsetfsuid\fP() のラッパー関数は
カーネルバージョンによるこの違いを吸収している。
.SH バグ
いかなる種類のエラーメッセージも呼び出し元に返さない。 失敗した場合は (呼び出し元には \fBCAP_SETUID\fP ケーパビリティがなかったのだから)
最低でも \fBEPERM\fP くらいは返すべきである。
.SH 関連項目
\fBkill\fP(2), \fBsetfsgid\fP(2), \fBcapabilities\fP(7), \fBcredentials\fP(7)
.SH この文書について
この man ページは Linux \fIman\-pages\fP プロジェクトのリリース 3.41 の一部
である。プロジェクトの説明とバグ報告に関する情報は
http://www.kernel.org/doc/man\-pages/ に書かれている。
